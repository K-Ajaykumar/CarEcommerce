{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CarService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5083/api/cars';\n    this.mockCars = [{\n      id: 1,\n      brand: 'Tesla',\n      model: 'Model 3',\n      year: 2024,\n      price: 46000,\n      imageUrl: 'assets/cars/tesla-model-3.jpg',\n      description: 'The Tesla Model 3 is an electric four-door sedan.'\n    }, {\n      id: 2,\n      brand: 'BMW',\n      model: 'X5',\n      year: 2024,\n      price: 66000,\n      imageUrl: 'assets/cars/BMW X5.jpeg',\n      description: 'The BMW X5 is a luxury SUV with powerful performance.'\n    }, {\n      id: 3,\n      brand: 'Ford',\n      model: 'Mustang Mach-E',\n      year: 2024,\n      price: 53000,\n      imageUrl: 'assets/cars/ford-mustang-mach-e.jpg',\n      description: 'The Ford Mustang Mach-E is an all-electric SUV.'\n    }, {\n      id: 4,\n      brand: 'Mercedes-Benz',\n      model: 'C-Class',\n      year: 2024,\n      price: 55000,\n      imageUrl: 'assets/cars/Mercedes-Benz C-Class.jpeg',\n      description: 'The Mercedes-Benz C-Class is a luxury sedan.'\n    }, {\n      id: 5,\n      brand: 'Audi',\n      model: 'A4',\n      year: 2024,\n      price: 48000,\n      imageUrl: 'assets/cars/Audi A4.jpeg',\n      description: 'The Audi A4 is a premium compact executive car.'\n    }, {\n      id: 6,\n      brand: 'Ferrari',\n      model: '488',\n      year: 2024,\n      price: 330000,\n      imageUrl: 'assets/cars/Ferrari 488.jpeg',\n      description: 'The Ferrari 488 is a high-performance sports car.'\n    }, {\n      id: 7,\n      brand: 'Jaguar',\n      model: 'F-Type',\n      year: 2024,\n      price: 74000,\n      imageUrl: 'assets/cars/Jaguar F-Type.jpeg',\n      description: 'The Jaguar F-Type is a luxury sports car.'\n    }, {\n      id: 8,\n      brand: 'Volkswagen',\n      model: 'Polo',\n      year: 2024,\n      price: 22000,\n      imageUrl: 'assets/cars/Volkswagen Polo.jpeg',\n      description: 'The Volkswagen Polo is a reliable compact car.'\n    }, {\n      id: 9,\n      brand: 'Skoda',\n      model: 'Octavia',\n      year: 2024,\n      price: 25000,\n      imageUrl: 'assets/cars/Skoda Octavia.jpeg',\n      description: 'The Skoda Octavia is a practical family car.'\n    }];\n  }\n  getCars() {\n    return of(this.mockCars);\n  }\n  getCarById(id) {\n    const car = this.mockCars.find(c => c.id === id);\n    return of(car);\n  }\n  searchCars(searchTerm) {\n    const filtered = this.mockCars.filter(car => car.model.toLowerCase().includes(searchTerm.toLowerCase()) || car.brand.toLowerCase().includes(searchTerm.toLowerCase()));\n    return of(filtered);\n  }\n  getCarsByBrand(brand) {\n    const filtered = this.mockCars.filter(car => car.brand === brand);\n    return of(filtered);\n  }\n  static {\n    this.ɵfac = function CarService_Factory(t) {\n      return new (t || CarService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CarService,\n      factory: CarService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["of","CarService","constructor","http","apiUrl","mockCars","id","brand","model","year","price","imageUrl","description","getCars","getCarById","car","find","c","searchCars","searchTerm","filtered","filter","toLowerCase","includes","getCarsByBrand","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\car.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Car } from '../models/car.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarService {\r\n  private apiUrl = 'http://localhost:5083/api/cars';\r\n  private mockCars: Car[] = [\r\n    {\r\n      id: 1,\r\n      brand: 'Tesla',\r\n      model: 'Model 3',\r\n      year: 2024,\r\n      price: 46000,\r\n      imageUrl: 'assets/cars/tesla-model-3.jpg',\r\n      description: 'The Tesla Model 3 is an electric four-door sedan.'\r\n    },\r\n    {\r\n      id: 2,\r\n      brand: 'BMW',\r\n      model: 'X5',\r\n      year: 2024,\r\n      price: 66000,\r\n      imageUrl: 'assets/cars/BMW X5.jpeg',\r\n      description: 'The BMW X5 is a luxury SUV with powerful performance.'\r\n    },\r\n    {\r\n      id: 3,\r\n      brand: 'Ford',\r\n      model: 'Mustang Mach-E',\r\n      year: 2024,\r\n      price: 53000,\r\n      imageUrl: 'assets/cars/ford-mustang-mach-e.jpg',\r\n      description: 'The Ford Mustang Mach-E is an all-electric SUV.'\r\n    },\r\n    {\r\n      id: 4,\r\n      brand: 'Mercedes-Benz',\r\n      model: 'C-Class',\r\n      year: 2024,\r\n      price: 55000,\r\n      imageUrl: 'assets/cars/Mercedes-Benz C-Class.jpeg',\r\n      description: 'The Mercedes-Benz C-Class is a luxury sedan.'\r\n    },\r\n    {\r\n      id: 5,\r\n      brand: 'Audi',\r\n      model: 'A4',\r\n      year: 2024,\r\n      price: 48000,\r\n      imageUrl: 'assets/cars/Audi A4.jpeg',\r\n      description: 'The Audi A4 is a premium compact executive car.'\r\n    },\r\n    {\r\n      id: 6,\r\n      brand: 'Ferrari',\r\n      model: '488',\r\n      year: 2024,\r\n      price: 330000,\r\n      imageUrl: 'assets/cars/Ferrari 488.jpeg',\r\n      description: 'The Ferrari 488 is a high-performance sports car.'\r\n    },\r\n    {\r\n      id: 7,\r\n      brand: 'Jaguar',\r\n      model: 'F-Type',\r\n      year: 2024,\r\n      price: 74000,\r\n      imageUrl: 'assets/cars/Jaguar F-Type.jpeg',\r\n      description: 'The Jaguar F-Type is a luxury sports car.'\r\n    },\r\n    {\r\n      id: 8,\r\n      brand: 'Volkswagen',\r\n      model: 'Polo',\r\n      year: 2024,\r\n      price: 22000,\r\n      imageUrl: 'assets/cars/Volkswagen Polo.jpeg',\r\n      description: 'The Volkswagen Polo is a reliable compact car.'\r\n    },\r\n    {\r\n      id: 9,\r\n      brand: 'Skoda',\r\n      model: 'Octavia',\r\n      year: 2024,\r\n      price: 25000,\r\n      imageUrl: 'assets/cars/Skoda Octavia.jpeg',\r\n      description: 'The Skoda Octavia is a practical family car.'\r\n    }\r\n  ];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCars(): Observable<Car[]> {\r\n    return of(this.mockCars);\r\n  }\r\n\r\n  getCarById(id: number): Observable<Car | undefined> {\r\n    const car = this.mockCars.find(c => c.id === id);\r\n    return of(car);\r\n  }\r\n\r\n  searchCars(searchTerm: string): Observable<Car[]> {\r\n    const filtered = this.mockCars.filter(car => \r\n      car.model.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      car.brand.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    return of(filtered);\r\n  }\r\n\r\n  getCarsByBrand(brand: string): Observable<Car[]> {\r\n    const filtered = this.mockCars.filter(car => car.brand === brand);\r\n    return of(filtered);\r\n  }\r\n} \r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}