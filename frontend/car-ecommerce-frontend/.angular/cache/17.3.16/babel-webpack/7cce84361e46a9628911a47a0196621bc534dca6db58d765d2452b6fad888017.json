{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, tap, catchError, throwError } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/api/cart`;\n    this.cartItemsSubject = new BehaviorSubject([]);\n    this.cartItems$ = this.cartItemsSubject.asObservable();\n    this.cartCountSubject = new BehaviorSubject(0);\n    this.cartCount$ = this.cartCountSubject.asObservable();\n    this.totalPriceSubject = new BehaviorSubject(0);\n    this.totalPrice$ = this.totalPriceSubject.asObservable();\n    this.loadCart();\n  }\n  getHttpOptions() {\n    const token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')).token : null;\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }),\n      withCredentials: true\n    };\n  }\n  handleError(error) {\n    let errorMessage = 'An error occurred';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n  loadCart() {\n    if (!localStorage.getItem('user')) {\n      this.cartItemsSubject.next([]);\n      this.updateCartCount();\n      this.calculateTotal();\n      return;\n    }\n    this.http.get(this.apiUrl, this.getHttpOptions()).subscribe({\n      next: items => {\n        console.log('Cart loaded:', items);\n        this.cartItemsSubject.next(items);\n        this.updateCartCount();\n        this.calculateTotal();\n      },\n      error: error => {\n        console.error('Error loading cart:', error);\n        this.cartItemsSubject.next([]);\n        this.updateCartCount();\n        this.calculateTotal();\n      }\n    });\n  }\n  addToCart(car, quantity = 1) {\n    console.log('Adding to cart:', {\n      car,\n      quantity\n    });\n    const payload = {\n      carId: car.id,\n      quantity: quantity\n    };\n    return this.http.post(this.apiUrl, payload, this.getHttpOptions()).pipe(tap(response => {\n      console.log('Add to cart response:', response);\n      this.loadCart();\n    }), catchError(this.handleError));\n  }\n  updateQuantity(cartItemId, quantity) {\n    console.log('Updating quantity:', {\n      cartItemId,\n      quantity\n    });\n    const payload = {\n      quantity: quantity\n    };\n    return this.http.put(`${this.apiUrl}/${cartItemId}`, payload, this.getHttpOptions()).pipe(tap(response => {\n      console.log('Update quantity response:', response);\n      this.loadCart();\n    }), catchError(this.handleError));\n  }\n  removeFromCart(cartItemId) {\n    console.log('Removing from cart:', cartItemId);\n    return this.http.delete(`${this.apiUrl}/${cartItemId}`, this.getHttpOptions()).pipe(tap(response => {\n      console.log('Remove from cart response:', response);\n      this.loadCart();\n    }), catchError(this.handleError));\n  }\n  clearCart() {\n    console.log('Clearing cart');\n    return this.http.delete(`${this.apiUrl}/clear`, this.getHttpOptions()).pipe(tap(response => {\n      console.log('Clear cart response:', response);\n      this.loadCart();\n    }), catchError(this.handleError));\n  }\n  updateCartCount() {\n    const totalItems = this.cartItemsSubject.value.reduce((sum, item) => sum + item.quantity, 0);\n    console.log('Updated cart count:', totalItems);\n    this.cartCountSubject.next(totalItems);\n  }\n  getCartItems() {\n    return this.cartItems$;\n  }\n  getTotalPrice() {\n    return this.totalPrice$;\n  }\n  calculateTotal() {\n    const total = this.cartItemsSubject.value.reduce((sum, item) => sum + item.car.price * item.quantity, 0);\n    console.log('Calculated total:', total);\n    this.totalPriceSubject.next(total);\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","BehaviorSubject","tap","catchError","throwError","environment","CartService","constructor","http","apiUrl","cartItemsSubject","cartItems$","asObservable","cartCountSubject","cartCount$","totalPriceSubject","totalPrice$","loadCart","getHttpOptions","token","localStorage","getItem","JSON","parse","headers","withCredentials","handleError","error","errorMessage","ErrorEvent","message","status","console","Error","next","updateCartCount","calculateTotal","get","subscribe","items","log","addToCart","car","quantity","payload","carId","id","post","pipe","response","updateQuantity","cartItemId","put","removeFromCart","delete","clearCart","totalItems","value","reduce","sum","item","getCartItems","getTotalPrice","total","price","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, tap, catchError, throwError } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { CartItem } from '../models/cart-item.model';\r\nimport { Car } from '../models/car.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private apiUrl = `${environment.apiUrl}/api/cart`;\r\n  private cartItemsSubject = new BehaviorSubject<CartItem[]>([]);\r\n  cartItems$ = this.cartItemsSubject.asObservable();\r\n  \r\n  private cartCountSubject = new BehaviorSubject<number>(0);\r\n  cartCount$ = this.cartCountSubject.asObservable();\r\n\r\n  private totalPriceSubject = new BehaviorSubject<number>(0);\r\n  totalPrice$ = this.totalPriceSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.loadCart();\r\n  }\r\n\r\n  private getHttpOptions(): { headers: HttpHeaders, withCredentials: boolean } {\r\n    const token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')!).token : null;\r\n    \r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }),\r\n      withCredentials: true\r\n    };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'An error occurred';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(() => new Error(errorMessage));\r\n  }\r\n\r\n  loadCart(): void {\r\n    if (!localStorage.getItem('user')) {\r\n      this.cartItemsSubject.next([]);\r\n      this.updateCartCount();\r\n      this.calculateTotal();\r\n      return;\r\n    }\r\n\r\n    this.http.get<CartItem[]>(this.apiUrl, this.getHttpOptions()).subscribe({\r\n      next: (items) => {\r\n        console.log('Cart loaded:', items);\r\n        this.cartItemsSubject.next(items);\r\n        this.updateCartCount();\r\n        this.calculateTotal();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading cart:', error);\r\n        this.cartItemsSubject.next([]);\r\n        this.updateCartCount();\r\n        this.calculateTotal();\r\n      }\r\n    });\r\n  }\r\n\r\n  addToCart(car: Car, quantity: number = 1): Observable<any> {\r\n    console.log('Adding to cart:', { car, quantity });\r\n    const payload = {\r\n      carId: car.id,\r\n      quantity: quantity\r\n    };\r\n\r\n    return this.http.post(this.apiUrl, payload, this.getHttpOptions()).pipe(\r\n      tap((response) => {\r\n        console.log('Add to cart response:', response);\r\n        this.loadCart();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateQuantity(cartItemId: number, quantity: number): Observable<any> {\r\n    console.log('Updating quantity:', { cartItemId, quantity });\r\n    const payload = { quantity: quantity };\r\n    return this.http.put(`${this.apiUrl}/${cartItemId}`, payload, this.getHttpOptions()).pipe(\r\n      tap((response) => {\r\n        console.log('Update quantity response:', response);\r\n        this.loadCart();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  removeFromCart(cartItemId: number): Observable<any> {\r\n    console.log('Removing from cart:', cartItemId);\r\n    return this.http.delete(`${this.apiUrl}/${cartItemId}`, this.getHttpOptions()).pipe(\r\n      tap((response) => {\r\n        console.log('Remove from cart response:', response);\r\n        this.loadCart();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  clearCart(): Observable<any> {\r\n    console.log('Clearing cart');\r\n    return this.http.delete(`${this.apiUrl}/clear`, this.getHttpOptions()).pipe(\r\n      tap((response) => {\r\n        console.log('Clear cart response:', response);\r\n        this.loadCart();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private updateCartCount(): void {\r\n    const totalItems = this.cartItemsSubject.value.reduce(\r\n      (sum, item) => sum + item.quantity, 0\r\n    );\r\n    console.log('Updated cart count:', totalItems);\r\n    this.cartCountSubject.next(totalItems);\r\n  }\r\n\r\n  getCartItems(): Observable<CartItem[]> {\r\n    return this.cartItems$;\r\n  }\r\n\r\n  getTotalPrice(): Observable<number> {\r\n    return this.totalPrice$;\r\n  }\r\n\r\n  private calculateTotal(): void {\r\n    const total = this.cartItemsSubject.value.reduce(\r\n      (sum, item) => sum + (item.car.price * item.quantity), 0\r\n    );\r\n    console.log('Calculated total:', total);\r\n    this.totalPriceSubject.next(total);\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}