{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class NotificationService {\n  constructor() {\n    this.notificationSubject = new BehaviorSubject(null);\n    this.notification$ = this.notificationSubject.asObservable();\n  }\n  showSuccess(message, duration = 3000) {\n    this.show({\n      message,\n      type: 'success',\n      duration\n    });\n  }\n  showError(message, duration = 5000) {\n    this.show({\n      message,\n      type: 'error',\n      duration\n    });\n  }\n  showInfo(message, duration = 3000) {\n    this.show({\n      message,\n      type: 'info',\n      duration\n    });\n  }\n  showWarning(message, duration = 4000) {\n    this.show({\n      message,\n      type: 'warning',\n      duration\n    });\n  }\n  show(notification) {\n    this.notificationSubject.next(notification);\n    // Auto-hide after duration\n    setTimeout(() => {\n      this.hide();\n    }, notification.duration || 3000);\n  }\n  hide() {\n    this.notificationSubject.next(null);\n  }\n  static {\n    this.ɵfac = function NotificationService_Factory(t) {\n      return new (t || NotificationService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: NotificationService,\n      factory: NotificationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","NotificationService","constructor","notificationSubject","notification$","asObservable","showSuccess","message","duration","show","type","showError","showInfo","showWarning","notification","next","setTimeout","hide","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\notification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Notification {\r\n  message: string;\r\n  type: 'success' | 'error' | 'info' | 'warning';\r\n  duration?: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  private notificationSubject = new BehaviorSubject<Notification | null>(null);\r\n  notification$ = this.notificationSubject.asObservable();\r\n\r\n  showSuccess(message: string, duration: number = 3000): void {\r\n    this.show({ message, type: 'success', duration });\r\n  }\r\n\r\n  showError(message: string, duration: number = 5000): void {\r\n    this.show({ message, type: 'error', duration });\r\n  }\r\n\r\n  showInfo(message: string, duration: number = 3000): void {\r\n    this.show({ message, type: 'info', duration });\r\n  }\r\n\r\n  showWarning(message: string, duration: number = 4000): void {\r\n    this.show({ message, type: 'warning', duration });\r\n  }\r\n\r\n  private show(notification: Notification): void {\r\n    this.notificationSubject.next(notification);\r\n    \r\n    // Auto-hide after duration\r\n    setTimeout(() => {\r\n      this.hide();\r\n    }, notification.duration || 3000);\r\n  }\r\n\r\n  hide(): void {\r\n    this.notificationSubject.next(null);\r\n  }\r\n} "],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAWtC,OAAM,MAAOC,mBAAmB;EAHhCC,YAAA;IAIU,KAAAC,mBAAmB,GAAG,IAAIH,eAAe,CAAsB,IAAI,CAAC;IAC5E,KAAAI,aAAa,GAAG,IAAI,CAACD,mBAAmB,CAACE,YAAY,EAAE;;EAEvDC,WAAWA,CAACC,OAAe,EAAEC,QAAA,GAAmB,IAAI;IAClD,IAAI,CAACC,IAAI,CAAC;MAAEF,OAAO;MAAEG,IAAI,EAAE,SAAS;MAAEF;IAAQ,CAAE,CAAC;EACnD;EAEAG,SAASA,CAACJ,OAAe,EAAEC,QAAA,GAAmB,IAAI;IAChD,IAAI,CAACC,IAAI,CAAC;MAAEF,OAAO;MAAEG,IAAI,EAAE,OAAO;MAAEF;IAAQ,CAAE,CAAC;EACjD;EAEAI,QAAQA,CAACL,OAAe,EAAEC,QAAA,GAAmB,IAAI;IAC/C,IAAI,CAACC,IAAI,CAAC;MAAEF,OAAO;MAAEG,IAAI,EAAE,MAAM;MAAEF;IAAQ,CAAE,CAAC;EAChD;EAEAK,WAAWA,CAACN,OAAe,EAAEC,QAAA,GAAmB,IAAI;IAClD,IAAI,CAACC,IAAI,CAAC;MAAEF,OAAO;MAAEG,IAAI,EAAE,SAAS;MAAEF;IAAQ,CAAE,CAAC;EACnD;EAEQC,IAAIA,CAACK,YAA0B;IACrC,IAAI,CAACX,mBAAmB,CAACY,IAAI,CAACD,YAAY,CAAC;IAE3C;IACAE,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,IAAI,EAAE;IACb,CAAC,EAAEH,YAAY,CAACN,QAAQ,IAAI,IAAI,CAAC;EACnC;EAEAS,IAAIA,CAAA;IACF,IAAI,CAACd,mBAAmB,CAACY,IAAI,CAAC,IAAI,CAAC;EACrC;;;uBA/BWd,mBAAmB;IAAA;EAAA;;;aAAnBA,mBAAmB;MAAAiB,OAAA,EAAnBjB,mBAAmB,CAAAkB,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}