{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5083/api/cart';\n    this.cartItemsSubject = new BehaviorSubject([]);\n    this.cartItems$ = this.cartItemsSubject.asObservable();\n    this.loadCartItems();\n  }\n  loadCartItems() {\n    this.http.get(this.apiUrl).subscribe({\n      next: items => {\n        this.cartItemsSubject.next(items);\n      },\n      error: error => {\n        console.error('Error loading cart items:', error);\n      }\n    });\n  }\n  addToCart(carId) {\n    const cartItem = {\n      carId: carId,\n      quantity: 1\n    };\n    return this.http.post(this.apiUrl, cartItem).pipe(map(response => {\n      this.loadCartItems(); // Reload cart items after successful addition\n      return response;\n    }));\n  }\n  removeFromCart(carId) {\n    return this.http.delete(`${this.apiUrl}/${carId}`).pipe(map(response => {\n      this.loadCartItems(); // Reload cart items after successful removal\n      return response;\n    }));\n  }\n  updateQuantity(cartItemId, quantity) {\n    const cartItem = {\n      carId: cartItemId,\n      quantity: quantity\n    };\n    return this.http.put(`${this.apiUrl}/${cartItemId}`, cartItem).pipe(map(response => {\n      this.loadCartItems(); // Reload cart items after successful update\n      return response;\n    }));\n  }\n  clearCart() {\n    return this.http.delete(`${this.apiUrl}/clear`).pipe(map(response => {\n      this.cartItemsSubject.next([]); // Clear the local cart\n      return response;\n    }));\n  }\n  getCartTotal() {\n    return this.cartItems$.pipe(map(items => items.reduce((total, item) => total + item.carPrice * item.quantity, 0)));\n  }\n  getCartItemCount() {\n    return this.cartItems$.pipe(map(items => items.reduce((count, item) => count + item.quantity, 0)));\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","map","CartService","constructor","http","apiUrl","cartItemsSubject","cartItems$","asObservable","loadCartItems","get","subscribe","next","items","error","console","addToCart","carId","cartItem","quantity","post","pipe","response","removeFromCart","delete","updateQuantity","cartItemId","put","clearCart","getCartTotal","reduce","total","item","carPrice","getCartItemCount","count","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CartItem } from '../models/cart-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private apiUrl = 'http://localhost:5083/api/cart';\r\n  private cartItemsSubject = new BehaviorSubject<CartItem[]>([]);\r\n  cartItems$ = this.cartItemsSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.loadCartItems();\r\n  }\r\n\r\n  loadCartItems(): void {\r\n    this.http.get<CartItem[]>(this.apiUrl).subscribe({\r\n      next: (items) => {\r\n        this.cartItemsSubject.next(items);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading cart items:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  addToCart(carId: number): Observable<any> {\r\n    const cartItem = { carId: carId, quantity: 1 };\r\n    return this.http.post(this.apiUrl, cartItem).pipe(\r\n      map(response => {\r\n        this.loadCartItems(); // Reload cart items after successful addition\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  removeFromCart(carId: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${carId}`).pipe(\r\n      map(response => {\r\n        this.loadCartItems(); // Reload cart items after successful removal\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  updateQuantity(cartItemId: number, quantity: number): Observable<any> {\r\n    const cartItem = { carId: cartItemId, quantity: quantity };\r\n    return this.http.put(`${this.apiUrl}/${cartItemId}`, cartItem).pipe(\r\n      map(response => {\r\n        this.loadCartItems(); // Reload cart items after successful update\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  clearCart(): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/clear`).pipe(\r\n      map(response => {\r\n        this.cartItemsSubject.next([]); // Clear the local cart\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  getCartTotal(): Observable<number> {\r\n    return this.cartItems$.pipe(\r\n      map(items => items.reduce((total, item) => total + (item.carPrice * item.quantity), 0))\r\n    );\r\n  }\r\n\r\n  getCartItemCount(): Observable<number> {\r\n    return this.cartItems$.pipe(\r\n      map(items => items.reduce((count, item) => count + item.quantity, 0))\r\n    );\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}