{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/auth.service\";\nexport class AuthGuard {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  canActivate() {\n    // Take the current value of the auth state\n    const isAuthenticated = this.authService.isLoggedIn();\n    if (!isAuthenticated) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","router","authService","canActivate","isAuthenticated","isLoggedIn","navigate","i0","ɵɵinject","i1","Router","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\r\n    // Take the current value of the auth state\r\n    const isAuthenticated = this.authService.isLoggedIn();\r\n    \r\n    if (!isAuthenticated) {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n} \r\n "],"mappings":";;;AASA,OAAM,MAAOA,SAAS;EACpBC,YACUC,MAAc,EACdC,WAAwB;IADxB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;EAClB;EAEHC,WAAWA,CAAA;IACT;IACA,MAAMC,eAAe,GAAG,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE;IAErD,IAAI,CAACD,eAAe,EAAE;MACpB,IAAI,CAACH,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb;;;uBAhBWP,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAATb,SAAS;MAAAc,OAAA,EAATd,SAAS,CAAAe,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}