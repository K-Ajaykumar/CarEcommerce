{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nlet CarListComponent = class CarListComponent {\n  constructor(router, carService) {\n    this.router = router;\n    this.carService = carService;\n    this.cars = [];\n    this.filteredCars = [];\n    this.brands = [];\n    this.searchTerm = '';\n    this.selectedBrand = '';\n  }\n  ngOnInit() {\n    this.loadCars();\n  }\n  loadCars() {\n    this.carService.getCars().subscribe({\n      next: cars => {\n        this.cars = cars;\n        this.filteredCars = cars;\n        this.brands = [...new Set(cars.map(car => car.brand))];\n      },\n      error: error => {\n        console.error('Error loading cars:', error);\n      }\n    });\n  }\n  filterCars() {\n    this.filteredCars = this.cars.filter(car => {\n      const matchesSearch = car.model.toLowerCase().includes(this.searchTerm.toLowerCase()) || car.brand.toLowerCase().includes(this.searchTerm.toLowerCase());\n      const matchesBrand = !this.selectedBrand || car.brand === this.selectedBrand;\n      return matchesSearch && matchesBrand;\n    });\n  }\n  onSearchChange() {\n    this.filterCars();\n  }\n  onBrandChange() {\n    this.filterCars();\n  }\n  viewCarDetails(id) {\n    this.router.navigate(['/cars', id]);\n  }\n  onImageError(event) {\n    const img = event.target;\n    img.src = 'assets/images/placeholder.jpg';\n  }\n};\nCarListComponent = __decorate([Component({\n  selector: 'app-car-list',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './car-list.component.html',\n  styleUrls: ['./car-list.component.scss']\n})], CarListComponent);\nexport { CarListComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","CarListComponent","constructor","router","carService","cars","filteredCars","brands","searchTerm","selectedBrand","ngOnInit","loadCars","getCars","subscribe","next","Set","map","car","brand","error","console","filterCars","filter","matchesSearch","model","toLowerCase","includes","matchesBrand","onSearchChange","onBrandChange","viewCarDetails","id","navigate","onImageError","event","img","target","src","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\cars\\car-list\\car-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CarService } from '../../services/car.service';\nimport { Car } from '../../models/car.model';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-car-list',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './car-list.component.html',\n  styleUrls: ['./car-list.component.scss']\n})\nexport class CarListComponent implements OnInit {\n  cars: Car[] = [];\n  filteredCars: Car[] = [];\n  brands: string[] = [];\n  searchTerm: string = '';\n  selectedBrand: string = '';\n\n  constructor(private router: Router, private carService: CarService) {}\n\n  ngOnInit(): void {\n    this.loadCars();\n  }\n\n  loadCars(): void {\n    this.carService.getCars().subscribe({\n      next: (cars) => {\n        this.cars = cars;\n        this.filteredCars = cars;\n        this.brands = [...new Set(cars.map(car => car.brand))];\n      },\n      error: (error) => {\n        console.error('Error loading cars:', error);\n      }\n    });\n  }\n\n  filterCars(): void {\n    this.filteredCars = this.cars.filter(car => {\n      const matchesSearch = car.model.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n                          car.brand.toLowerCase().includes(this.searchTerm.toLowerCase());\n      const matchesBrand = !this.selectedBrand || car.brand === this.selectedBrand;\n      return matchesSearch && matchesBrand;\n    });\n  }\n\n  onSearchChange(): void {\n    this.filterCars();\n  }\n\n  onBrandChange(): void {\n    this.filterCars();\n  }\n\n  viewCarDetails(id: number): void {\n    this.router.navigate(['/cars', id]);\n  }\n\n  onImageError(event: Event): void {\n    const img = event.target as HTMLImageElement;\n    img.src = 'assets/images/placeholder.jpg';\n  }\n} "],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AASrC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAO3BC,YAAoBC,MAAc,EAAUC,UAAsB;IAA9C,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,UAAU,GAAVA,UAAU;IANtD,KAAAC,IAAI,GAAU,EAAE;IAChB,KAAAC,YAAY,GAAU,EAAE;IACxB,KAAAC,MAAM,GAAa,EAAE;IACrB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,aAAa,GAAW,EAAE;EAE2C;EAErEC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQA,CAAA;IACN,IAAI,CAACP,UAAU,CAACQ,OAAO,EAAE,CAACC,SAAS,CAAC;MAClCC,IAAI,EAAGT,IAAI,IAAI;QACb,IAAI,CAACA,IAAI,GAAGA,IAAI;QAChB,IAAI,CAACC,YAAY,GAAGD,IAAI;QACxB,IAAI,CAACE,MAAM,GAAG,CAAC,GAAG,IAAIQ,GAAG,CAACV,IAAI,CAACW,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;MACxD,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;KACD,CAAC;EACJ;EAEAE,UAAUA,CAAA;IACR,IAAI,CAACf,YAAY,GAAG,IAAI,CAACD,IAAI,CAACiB,MAAM,CAACL,GAAG,IAAG;MACzC,MAAMM,aAAa,GAAGN,GAAG,CAACO,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAACiB,WAAW,EAAE,CAAC,IACjER,GAAG,CAACC,KAAK,CAACO,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAACiB,WAAW,EAAE,CAAC;MACnF,MAAME,YAAY,GAAG,CAAC,IAAI,CAAClB,aAAa,IAAIQ,GAAG,CAACC,KAAK,KAAK,IAAI,CAACT,aAAa;MAC5E,OAAOc,aAAa,IAAII,YAAY;IACtC,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA;IACZ,IAAI,CAACP,UAAU,EAAE;EACnB;EAEAQ,aAAaA,CAAA;IACX,IAAI,CAACR,UAAU,EAAE;EACnB;EAEAS,cAAcA,CAACC,EAAU;IACvB,IAAI,CAAC5B,MAAM,CAAC6B,QAAQ,CAAC,CAAC,OAAO,EAAED,EAAE,CAAC,CAAC;EACrC;EAEAE,YAAYA,CAACC,KAAY;IACvB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAA0B;IAC5CD,GAAG,CAACE,GAAG,GAAG,+BAA+B;EAC3C;CACD;AAnDYpC,gBAAgB,GAAAqC,UAAA,EAP5BxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,cAAc;EACxBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC1C,YAAY,EAAEC,WAAW,CAAC;EACpC0C,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACW1C,gBAAgB,CAmD5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}