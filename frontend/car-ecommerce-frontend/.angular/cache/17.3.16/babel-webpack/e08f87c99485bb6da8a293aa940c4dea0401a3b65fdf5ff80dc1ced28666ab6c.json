{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class OrderService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://localhost:5083/api/orders';\n  }\n  getHeaders() {\n    const token = this.authService.getToken();\n    return {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  createOrder(orderData) {\n    return this.http.post(this.apiUrl, orderData, this.getHeaders());\n  }\n  getUserOrders() {\n    return this.http.get(`${this.apiUrl}/user`, this.getHeaders());\n  }\n  getOrderById(orderId) {\n    return this.http.get(`${this.apiUrl}/${orderId}`, this.getHeaders());\n  }\n  static {\n    this.ɵfac = function OrderService_Factory(t) {\n      return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: OrderService,\n      factory: OrderService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","OrderService","constructor","http","authService","apiUrl","getHeaders","token","getToken","headers","createOrder","orderData","post","getUserOrders","get","getOrderById","orderId","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Order } from '../models/order.model';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  private apiUrl = 'http://localhost:5083/api/orders';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  private getHeaders(): { headers: HttpHeaders } {\r\n    const token = this.authService.getToken();\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n  }\r\n\r\n  createOrder(orderData: Partial<Order>): Observable<Order> {\r\n    return this.http.post<Order>(this.apiUrl, orderData, this.getHeaders());\r\n  }\r\n\r\n  getUserOrders(): Observable<Order[]> {\r\n    return this.http.get<Order[]>(`${this.apiUrl}/user`, this.getHeaders());\r\n  }\r\n\r\n  getOrderById(orderId: string): Observable<Order> {\r\n    return this.http.get<Order>(`${this.apiUrl}/${orderId}`, this.getHeaders());\r\n  }\r\n} "],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAQ9D,OAAM,MAAOC,YAAY;EAGvBC,YACUC,IAAgB,EAChBC,WAAwB;IADxB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,WAAW,GAAXA,WAAW;IAJb,KAAAC,MAAM,GAAG,kCAAkC;EAKhD;EAEKC,UAAUA,CAAA;IAChB,MAAMC,KAAK,GAAG,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE;IACzC,OAAO;MACLC,OAAO,EAAE,IAAIT,WAAW,CAAC;QACvB,eAAe,EAAE,UAAUO,KAAK,EAAE;QAClC,cAAc,EAAE;OACjB;KACF;EACH;EAEAG,WAAWA,CAACC,SAAyB;IACnC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAQ,IAAI,CAACP,MAAM,EAAEM,SAAS,EAAE,IAAI,CAACL,UAAU,EAAE,CAAC;EACzE;EAEAO,aAAaA,CAAA;IACX,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,OAAO,EAAE,IAAI,CAACC,UAAU,EAAE,CAAC;EACzE;EAEAS,YAAYA,CAACC,OAAe;IAC1B,OAAO,IAAI,CAACb,IAAI,CAACW,GAAG,CAAQ,GAAG,IAAI,CAACT,MAAM,IAAIW,OAAO,EAAE,EAAE,IAAI,CAACV,UAAU,EAAE,CAAC;EAC7E;;;uBA5BWL,YAAY,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAZrB,YAAY;MAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}