{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5083/api/cart';\n    this.cartItemsSubject = new BehaviorSubject([]);\n    this.cartItems$ = this.cartItemsSubject.asObservable();\n    this.cartCountSubject = new BehaviorSubject(0);\n    this.cartCount$ = this.cartCountSubject.asObservable();\n    this.totalPrice = new BehaviorSubject(0);\n    this.loadCart();\n  }\n  loadCart() {\n    this.http.get(this.apiUrl).subscribe({\n      next: items => {\n        this.cartItemsSubject.next(items);\n        this.updateCartCount();\n        this.calculateTotal();\n      },\n      error: error => console.error('Error loading cart:', error)\n    });\n  }\n  addToCart(carId, quantity = 1) {\n    return this.http.post(this.apiUrl, {\n      carId,\n      quantity\n    }).pipe(tap(() => this.loadCart()));\n  }\n  updateQuantity(cartItemId, quantity) {\n    return this.http.put(`${this.apiUrl}/${cartItemId}`, {\n      quantity\n    }).pipe(tap(() => this.loadCart()));\n  }\n  removeFromCart(cartItemId) {\n    return this.http.delete(`${this.apiUrl}/${cartItemId}`).pipe(tap(() => this.loadCart()));\n  }\n  clearCart() {\n    return this.http.delete(`${this.apiUrl}/clear`).pipe(tap(() => this.loadCart()));\n  }\n  updateCartCount() {\n    const totalItems = this.cartItemsSubject.value.reduce((sum, item) => sum + item.quantity, 0);\n    this.cartCountSubject.next(totalItems);\n  }\n  getCartItems() {\n    return this.cartItemsSubject.asObservable();\n  }\n  getTotalPrice() {\n    return this.totalPrice.asObservable();\n  }\n  calculateTotal() {\n    const total = this.cartItemsSubject.value.reduce((sum, item) => sum + item.totalPrice, 0);\n    this.totalPrice.next(total);\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","tap","CartService","constructor","http","apiUrl","cartItemsSubject","cartItems$","asObservable","cartCountSubject","cartCount$","totalPrice","loadCart","get","subscribe","next","items","updateCartCount","calculateTotal","error","console","addToCart","carId","quantity","post","pipe","updateQuantity","cartItemId","put","removeFromCart","delete","clearCart","totalItems","value","reduce","sum","item","getCartItems","getTotalPrice","total","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { CartItem } from '../models/cart-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private apiUrl = 'http://localhost:5083/api/cart';\r\n  private cartItemsSubject = new BehaviorSubject<CartItem[]>([]);\r\n  cartItems$ = this.cartItemsSubject.asObservable();\r\n  \r\n  private cartCountSubject = new BehaviorSubject<number>(0);\r\n  cartCount$ = this.cartCountSubject.asObservable();\r\n\r\n  private totalPrice = new BehaviorSubject<number>(0);\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.loadCart();\r\n  }\r\n\r\n  loadCart(): void {\r\n    this.http.get<CartItem[]>(this.apiUrl).subscribe({\r\n      next: (items) => {\r\n        this.cartItemsSubject.next(items);\r\n        this.updateCartCount();\r\n        this.calculateTotal();\r\n      },\r\n      error: (error) => console.error('Error loading cart:', error)\r\n    });\r\n  }\r\n\r\n  addToCart(carId: number, quantity: number = 1): Observable<any> {\r\n    return this.http.post(this.apiUrl, { carId, quantity }).pipe(\r\n      tap(() => this.loadCart())\r\n    );\r\n  }\r\n\r\n  updateQuantity(cartItemId: number, quantity: number): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/${cartItemId}`, { quantity }).pipe(\r\n      tap(() => this.loadCart())\r\n    );\r\n  }\r\n\r\n  removeFromCart(cartItemId: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${cartItemId}`).pipe(\r\n      tap(() => this.loadCart())\r\n    );\r\n  }\r\n\r\n  clearCart(): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/clear`).pipe(\r\n      tap(() => this.loadCart())\r\n    );\r\n  }\r\n\r\n  private updateCartCount(): void {\r\n    const totalItems = this.cartItemsSubject.value.reduce(\r\n      (sum, item) => sum + item.quantity, 0\r\n    );\r\n    this.cartCountSubject.next(totalItems);\r\n  }\r\n\r\n  getCartItems(): Observable<CartItem[]> {\r\n    return this.cartItemsSubject.asObservable();\r\n  }\r\n\r\n  getTotalPrice(): Observable<number> {\r\n    return this.totalPrice.asObservable();\r\n  }\r\n\r\n  private calculateTotal(): void {\r\n    const total = this.cartItemsSubject.value.reduce((sum, item) => sum + item.totalPrice, 0);\r\n    this.totalPrice.next(total);\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}