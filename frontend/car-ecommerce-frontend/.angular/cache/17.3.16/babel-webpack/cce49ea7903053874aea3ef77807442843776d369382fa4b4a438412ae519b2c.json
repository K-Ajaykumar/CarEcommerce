{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { map } from 'rxjs';\nlet CartViewComponent = class CartViewComponent {\n  constructor(cartService, router) {\n    this.cartService = cartService;\n    this.router = router;\n    this.cartItems$ = this.cartService.getCartItems();\n    this.totalPrice$ = this.cartService.getTotalPrice().pipe(map(price => price || 0) // Ensure we never get null\n    );\n  }\n  ngOnInit() {\n    this.cartService.loadCart();\n  }\n  updateQuantity(item, change) {\n    const newQuantity = item.quantity + change;\n    if (newQuantity > 0) {\n      this.cartService.updateQuantity(item.id, newQuantity).subscribe({\n        error: error => console.error('Error updating quantity:', error)\n      });\n    }\n  }\n  removeItem(item) {\n    this.cartService.removeFromCart(item.id).subscribe({\n      error: error => console.error('Error removing item:', error)\n    });\n  }\n  clearCart() {\n    this.cartService.clearCart().subscribe({\n      error: error => console.error('Error clearing cart:', error)\n    });\n  }\n  checkout() {\n    // TODO: Implement checkout logic\n    this.router.navigate(['/checkout']);\n  }\n  continueShopping() {\n    this.router.navigate(['/cars']);\n  }\n};\nCartViewComponent = __decorate([Component({\n  selector: 'app-cart-view',\n  standalone: true,\n  imports: [CommonModule, RouterModule, MatIconModule, MatButtonModule],\n  templateUrl: './cart-view.component.html',\n  styleUrls: ['./cart-view.component.scss']\n})], CartViewComponent);\nexport { CartViewComponent };","map":{"version":3,"names":["Component","CommonModule","RouterModule","MatIconModule","MatButtonModule","map","CartViewComponent","constructor","cartService","router","cartItems$","getCartItems","totalPrice$","getTotalPrice","pipe","price","ngOnInit","loadCart","updateQuantity","item","change","newQuantity","quantity","id","subscribe","error","console","removeItem","removeFromCart","clearCart","checkout","navigate","continueShopping","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\cart\\cart-view\\cart-view.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Observable, map } from 'rxjs';\nimport { CartService } from '../../services/cart.service';\nimport { CartItem } from '../../models/cart-item.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cart-view',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  templateUrl: './cart-view.component.html',\n  styleUrls: ['./cart-view.component.scss']\n})\nexport class CartViewComponent implements OnInit {\n  cartItems$: Observable<CartItem[]>;\n  totalPrice$: Observable<number>;\n\n  constructor(private cartService: CartService, private router: Router) {\n    this.cartItems$ = this.cartService.getCartItems();\n    this.totalPrice$ = this.cartService.getTotalPrice().pipe(\n      map(price => price || 0) // Ensure we never get null\n    );\n  }\n\n  ngOnInit(): void {\n    this.cartService.loadCart();\n  }\n\n  updateQuantity(item: CartItem, change: number): void {\n    const newQuantity = item.quantity + change;\n    if (newQuantity > 0) {\n      this.cartService.updateQuantity(item.id, newQuantity).subscribe({\n        error: (error) => console.error('Error updating quantity:', error)\n      });\n    }\n  }\n\n  removeItem(item: CartItem): void {\n    this.cartService.removeFromCart(item.id).subscribe({\n      error: (error) => console.error('Error removing item:', error)\n    });\n  }\n\n  clearCart(): void {\n    this.cartService.clearCart().subscribe({\n      error: (error) => console.error('Error clearing cart:', error)\n    });\n  }\n\n  checkout(): void {\n    // TODO: Implement checkout logic\n    this.router.navigate(['/checkout']);\n  }\n\n  continueShopping(): void {\n    this.router.navigate(['/cars']);\n  }\n} "],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAAqBC,GAAG,QAAQ,MAAM;AAiB/B,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAC1D,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,WAAW,CAACG,YAAY,EAAE;IACjD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACJ,WAAW,CAACK,aAAa,EAAE,CAACC,IAAI,CACtDT,GAAG,CAACU,KAAK,IAAIA,KAAK,IAAI,CAAC,CAAC,CAAC;KAC1B;EACH;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACR,WAAW,CAACS,QAAQ,EAAE;EAC7B;EAEAC,cAAcA,CAACC,IAAc,EAAEC,MAAc;IAC3C,MAAMC,WAAW,GAAGF,IAAI,CAACG,QAAQ,GAAGF,MAAM;IAC1C,IAAIC,WAAW,GAAG,CAAC,EAAE;MACnB,IAAI,CAACb,WAAW,CAACU,cAAc,CAACC,IAAI,CAACI,EAAE,EAAEF,WAAW,CAAC,CAACG,SAAS,CAAC;QAC9DC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK;OAClE,CAAC;IACJ;EACF;EAEAE,UAAUA,CAACR,IAAc;IACvB,IAAI,CAACX,WAAW,CAACoB,cAAc,CAACT,IAAI,CAACI,EAAE,CAAC,CAACC,SAAS,CAAC;MACjDC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK;KAC9D,CAAC;EACJ;EAEAI,SAASA,CAAA;IACP,IAAI,CAACrB,WAAW,CAACqB,SAAS,EAAE,CAACL,SAAS,CAAC;MACrCC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK;KAC9D,CAAC;EACJ;EAEAK,QAAQA,CAAA;IACN;IACA,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;EAEAC,gBAAgBA,CAAA;IACd,IAAI,CAACvB,MAAM,CAACsB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;CACD;AA5CYzB,iBAAiB,GAAA2B,UAAA,EAZ7BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,eAAe;EACzBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPnC,YAAY,EACZC,YAAY,EACZC,aAAa,EACbC,eAAe,CAChB;EACDiC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWhC,iBAAiB,CA4C7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}