{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/orders`;\n  }\n  createOrder(orderData) {\n    return this.http.post(this.apiUrl, orderData);\n  }\n  getUserOrders(userId) {\n    return this.http.get(`${this.apiUrl}/user/${userId}`);\n  }\n  getOrderById(orderId) {\n    return this.http.get(`${this.apiUrl}/${orderId}`);\n  }\n  updateOrderStatus(orderId, status) {\n    return this.http.patch(`${this.apiUrl}/${orderId}/status`, JSON.stringify(status), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  static {\n    this.ɵfac = function OrderService_Factory(t) {\n      return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: OrderService,\n      factory: OrderService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","OrderService","constructor","http","apiUrl","createOrder","orderData","post","getUserOrders","userId","get","getOrderById","orderId","updateOrderStatus","status","patch","JSON","stringify","headers","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface OrderItem {\r\n  id: number;\r\n  make: string;\r\n  model: string;\r\n  year: number;\r\n  price: number;\r\n  quantity: number;\r\n  totalPrice: number;\r\n}\r\n\r\nexport interface Order {\r\n  id: number;\r\n  userId: number;\r\n  carId: number;\r\n  carMake: string;\r\n  carModel: string;\r\n  carYear: number;\r\n  quantity: number;\r\n  totalPrice: number;\r\n  status: string;\r\n  shippingAddress: string;\r\n  orderDate: string;\r\n  shippedDate?: string;\r\n  deliveredDate?: string;\r\n}\r\n\r\nexport interface CreateOrderDTO {\r\n  userId: number;\r\n  carId: number;\r\n  quantity: number;\r\n  totalPrice: number;\r\n  shippingAddress: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  private apiUrl = `${environment.apiUrl}/orders`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createOrder(orderData: CreateOrderDTO): Observable<Order> {\r\n    return this.http.post<Order>(this.apiUrl, orderData);\r\n  }\r\n\r\n  getUserOrders(userId: number): Observable<Order[]> {\r\n    return this.http.get<Order[]>(`${this.apiUrl}/user/${userId}`);\r\n  }\r\n\r\n  getOrderById(orderId: number): Observable<Order> {\r\n    return this.http.get<Order>(`${this.apiUrl}/${orderId}`);\r\n  }\r\n\r\n  updateOrderStatus(orderId: number, status: string): Observable<void> {\r\n    return this.http.patch<void>(`${this.apiUrl}/${orderId}/status`, JSON.stringify(status), {\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n} "],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAuC5D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,SAAS;EAEP;EAExCC,WAAWA,CAACC,SAAyB;IACnC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAQ,IAAI,CAACH,MAAM,EAAEE,SAAS,CAAC;EACtD;EAEAE,aAAaA,CAACC,MAAc;IAC1B,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAU,GAAG,IAAI,CAACN,MAAM,SAASK,MAAM,EAAE,CAAC;EAChE;EAEAE,YAAYA,CAACC,OAAe;IAC1B,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAQ,GAAG,IAAI,CAACN,MAAM,IAAIQ,OAAO,EAAE,CAAC;EAC1D;EAEAC,iBAAiBA,CAACD,OAAe,EAAEE,MAAc;IAC/C,OAAO,IAAI,CAACX,IAAI,CAACY,KAAK,CAAO,GAAG,IAAI,CAACX,MAAM,IAAIQ,OAAO,SAAS,EAAEI,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC,EAAE;MACvFI,OAAO,EAAE;QAAE,cAAc,EAAE;MAAkB;KAC9C,CAAC;EACJ;;;uBArBWjB,YAAY,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZrB,YAAY;MAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}