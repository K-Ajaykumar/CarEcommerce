{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/api/cart`;\n    this.cartItemsSubject = new BehaviorSubject([]);\n    this.cartCountSubject = new BehaviorSubject(0);\n    this.cartItems$ = this.cartItemsSubject.asObservable();\n    this.cartCount$ = this.cartCountSubject.asObservable();\n    this.loadCart();\n  }\n  loadCart() {\n    this.http.get(this.apiUrl).subscribe({\n      next: items => {\n        this.cartItemsSubject.next(items);\n        this.updateCartCount(items);\n      },\n      error: error => {\n        console.error('Error loading cart:', error);\n        this.cartItemsSubject.next([]);\n        this.cartCountSubject.next(0);\n      }\n    });\n  }\n  addToCart(carId, quantity = 1) {\n    return this.http.post(this.apiUrl, {\n      carId,\n      quantity\n    }).pipe(tap(() => this.loadCart()));\n  }\n  updateQuantity(cartItemId, quantity) {\n    return this.http.put(`${this.apiUrl}/${cartItemId}`, {\n      quantity\n    }).pipe(tap(() => this.loadCart()));\n  }\n  removeFromCart(cartItemId) {\n    return this.http.delete(`${this.apiUrl}/${cartItemId}`).pipe(tap(() => this.loadCart()));\n  }\n  clearCart() {\n    return this.http.delete(this.apiUrl).pipe(tap(() => {\n      this.cartItemsSubject.next([]);\n      this.cartCountSubject.next(0);\n    }));\n  }\n  updateCartCount(items) {\n    const totalItems = items.reduce((sum, item) => sum + item.quantity, 0);\n    this.cartCountSubject.next(totalItems);\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","tap","environment","CartService","constructor","http","apiUrl","cartItemsSubject","cartCountSubject","cartItems$","asObservable","cartCount$","loadCart","get","subscribe","next","items","updateCartCount","error","console","addToCart","carId","quantity","post","pipe","updateQuantity","cartItemId","put","removeFromCart","delete","clearCart","totalItems","reduce","sum","item","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { Car } from '../models/car.model';\r\n\r\nexport interface CartItem {\r\n  id: number;\r\n  carId: number;\r\n  car: Car;\r\n  quantity: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private apiUrl = `${environment.apiUrl}/api/cart`;\r\n  private cartItemsSubject = new BehaviorSubject<CartItem[]>([]);\r\n  private cartCountSubject = new BehaviorSubject<number>(0);\r\n\r\n  cartItems$ = this.cartItemsSubject.asObservable();\r\n  cartCount$ = this.cartCountSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.loadCart();\r\n  }\r\n\r\n  loadCart(): void {\r\n    this.http.get<CartItem[]>(this.apiUrl).subscribe({\r\n      next: (items) => {\r\n        this.cartItemsSubject.next(items);\r\n        this.updateCartCount(items);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading cart:', error);\r\n        this.cartItemsSubject.next([]);\r\n        this.cartCountSubject.next(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  addToCart(carId: number, quantity: number = 1): Observable<any> {\r\n    return this.http.post(this.apiUrl, { carId, quantity }).pipe(\r\n      tap(() => this.loadCart())\r\n    );\r\n  }\r\n\r\n  updateQuantity(cartItemId: number, quantity: number): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/${cartItemId}`, { quantity }).pipe(\r\n      tap(() => this.loadCart())\r\n    );\r\n  }\r\n\r\n  removeFromCart(cartItemId: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${cartItemId}`).pipe(\r\n      tap(() => this.loadCart())\r\n    );\r\n  }\r\n\r\n  clearCart(): Observable<any> {\r\n    return this.http.delete(this.apiUrl).pipe(\r\n      tap(() => {\r\n        this.cartItemsSubject.next([]);\r\n        this.cartCountSubject.next(0);\r\n      })\r\n    );\r\n  }\r\n\r\n  private updateCartCount(items: CartItem[]): void {\r\n    const totalItems = items.reduce((sum, item) => sum + item.quantity, 0);\r\n    this.cartCountSubject.next(totalItems);\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}