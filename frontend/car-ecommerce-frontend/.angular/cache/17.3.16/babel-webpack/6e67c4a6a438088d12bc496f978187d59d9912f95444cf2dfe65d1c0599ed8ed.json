{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CarService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5083/api/cars';\n    // Mock data for development\n    this.mockCars = [{\n      id: 1,\n      make: 'Tesla',\n      model: 'Model S',\n      year: 2023,\n      price: 89990,\n      color: 'Red',\n      engineType: 'Dual Motor All-Wheel Drive',\n      transmission: 'Single-Speed',\n      mileage: 0,\n      description: 'The Tesla Model S is a full-size all-electric five-door, luxury liftback car.',\n      imageUrl: 'assets/cars/tesla-model-s.jpg',\n      stockQuantity: 5\n    }, {\n      id: 2,\n      make: 'Tesla',\n      model: 'Model 3',\n      year: 2023,\n      price: 41990,\n      color: 'Blue',\n      engineType: 'Single Motor Rear-Wheel Drive',\n      transmission: 'Single-Speed',\n      mileage: 0,\n      description: 'The Tesla Model 3 is a compact executive sedan that is battery powered and produced by Tesla.',\n      imageUrl: 'assets/cars/tesla-model-3.jpg',\n      stockQuantity: 8\n    }, {\n      id: 3,\n      make: 'Ford',\n      model: 'Mustang Mach-E',\n      year: 2023,\n      price: 45995,\n      color: 'Black',\n      engineType: 'Dual Motor All-Wheel Drive',\n      transmission: 'Single-Speed',\n      mileage: 0,\n      description: 'The Ford Mustang Mach-E is a battery electric compact crossover SUV.',\n      imageUrl: 'assets/cars/ford-mustang-mach-e.jpg',\n      stockQuantity: 4\n    }, {\n      id: 4,\n      make: 'Skoda',\n      model: 'Octavia',\n      year: 2023,\n      price: 32990,\n      color: 'Silver',\n      engineType: '2.0L TSI',\n      transmission: 'Automatic',\n      mileage: 0,\n      description: 'The Skoda Octavia is a practical and spacious family car with excellent build quality.',\n      imageUrl: 'assets/cars/Skoda Octavia.jpeg',\n      stockQuantity: 6\n    }, {\n      id: 5,\n      make: 'Volkswagen',\n      model: 'Polo',\n      year: 2023,\n      price: 24990,\n      color: 'White',\n      engineType: '1.5L TSI',\n      transmission: 'Automatic',\n      mileage: 0,\n      description: 'The Volkswagen Polo is a supermini car that offers great value and practicality.',\n      imageUrl: 'assets/cars/Volkswagen Polo.jpeg',\n      stockQuantity: 10\n    }, {\n      id: 6,\n      make: 'Ferrari',\n      model: '488',\n      year: 2023,\n      price: 279990,\n      color: 'Red',\n      engineType: '3.9L V8 Twin-Turbo',\n      transmission: 'Automatic',\n      mileage: 0,\n      description: 'The Ferrari 488 is a mid-engine sports car that represents the pinnacle of Italian automotive engineering.',\n      imageUrl: 'assets/cars/Ferrari 488.jpeg',\n      stockQuantity: 2\n    }, {\n      id: 7,\n      make: 'Mercedes-Benz',\n      model: 'C-Class',\n      year: 2023,\n      price: 45990,\n      color: 'Black',\n      engineType: '2.0L Turbo',\n      transmission: 'Automatic',\n      mileage: 0,\n      description: 'The Mercedes-Benz C-Class is a luxury compact executive car with premium features.',\n      imageUrl: 'assets/cars/Mercedes-Benz C-Class.jpeg',\n      stockQuantity: 5\n    }, {\n      id: 8,\n      make: 'Jaguar',\n      model: 'F-Type',\n      year: 2023,\n      price: 72990,\n      color: 'British Racing Green',\n      engineType: '5.0L V8',\n      transmission: 'Automatic',\n      mileage: 0,\n      description: 'The Jaguar F-Type is a luxury sports car that combines British elegance with performance.',\n      imageUrl: 'assets/cars/Jaguar F-Type.jpeg',\n      stockQuantity: 3\n    }, {\n      id: 9,\n      make: 'BMW',\n      model: 'X5',\n      year: 2023,\n      price: 65990,\n      color: 'Blue',\n      engineType: '3.0L Twin-Turbo',\n      transmission: 'Automatic',\n      mileage: 0,\n      description: 'The BMW X5 is a luxury SUV that offers a perfect blend of comfort and performance.',\n      imageUrl: 'assets/cars/BMW X5.jpeg',\n      stockQuantity: 4\n    }, {\n      id: 10,\n      make: 'Audi',\n      model: 'A4',\n      year: 2023,\n      price: 42990,\n      color: 'Gray',\n      engineType: '2.0L TFSI',\n      transmission: 'Automatic',\n      mileage: 0,\n      description: 'The Audi A4 is a premium compact executive car with advanced technology and comfort.',\n      imageUrl: 'assets/cars/Audi A4.jpeg',\n      stockQuantity: 7\n    }, {\n      id: 11,\n      make: 'Mercedes-Benz',\n      model: 'S-Class',\n      year: 2023,\n      price: 119990,\n      color: 'Silver',\n      engineType: '3.0L Hybrid',\n      transmission: 'Automatic',\n      mileage: 0,\n      description: 'The Mercedes-Benz S-Class is the flagship luxury sedan with cutting-edge technology and comfort.',\n      imageUrl: 'assets/cars/Benz.jpeg',\n      stockQuantity: 3\n    }];\n  }\n  getCars() {\n    // For development, return mock data\n    // return of(this.mockCars);\n    // When backend is ready, uncomment this:\n    return this.http.get(this.apiUrl);\n  }\n  getCarById(id) {\n    // For development, return mock data\n    // const car = this.mockCars.find(c => c.id === id);\n    // return of(car!);\n    // When backend is ready, uncomment this:\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  searchCars(searchTerm) {\n    // For development, return filtered mock data\n    // const filtered = this.mockCars.filter(car => \n    //   car.model.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    //   car.make.toLowerCase().includes(searchTerm.toLowerCase())\n    // );\n    // return of(filtered);\n    // When backend is ready, uncomment this:\n    return this.http.get(`${this.apiUrl}/search?term=${searchTerm}`);\n  }\n  getCarsByBrand(brand) {\n    // For development, return filtered mock data\n    // const filtered = this.mockCars.filter(car => car.make === brand);\n    // return of(filtered);\n    // When backend is ready, uncomment this:\n    return this.http.get(`${this.apiUrl}/brand/${brand}`);\n  }\n  static {\n    this.ɵfac = function CarService_Factory(t) {\n      return new (t || CarService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CarService,\n      factory: CarService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["CarService","constructor","http","apiUrl","mockCars","id","make","model","year","price","color","engineType","transmission","mileage","description","imageUrl","stockQuantity","getCars","get","getCarById","searchCars","searchTerm","getCarsByBrand","brand","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\car.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Car } from '../models/car.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarService {\r\n  private apiUrl = 'http://localhost:5083/api/cars';\r\n\r\n  // Mock data for development\r\n  private mockCars: Car[] = [\r\n    {\r\n      id: 1,\r\n      make: 'Tesla',\r\n      model: 'Model S',\r\n      year: 2023,\r\n      price: 89990,\r\n      color: 'Red',\r\n      engineType: 'Dual Motor All-Wheel Drive',\r\n      transmission: 'Single-Speed',\r\n      mileage: 0,\r\n      description: 'The Tesla Model S is a full-size all-electric five-door, luxury liftback car.',\r\n      imageUrl: 'assets/cars/tesla-model-s.jpg',\r\n      stockQuantity: 5\r\n    },\r\n    {\r\n      id: 2,\r\n      make: 'Tesla',\r\n      model: 'Model 3',\r\n      year: 2023,\r\n      price: 41990,\r\n      color: 'Blue',\r\n      engineType: 'Single Motor Rear-Wheel Drive',\r\n      transmission: 'Single-Speed',\r\n      mileage: 0,\r\n      description: 'The Tesla Model 3 is a compact executive sedan that is battery powered and produced by Tesla.',\r\n      imageUrl: 'assets/cars/tesla-model-3.jpg',\r\n      stockQuantity: 8\r\n    },\r\n    {\r\n      id: 3,\r\n      make: 'Ford',\r\n      model: 'Mustang Mach-E',\r\n      year: 2023,\r\n      price: 45995,\r\n      color: 'Black',\r\n      engineType: 'Dual Motor All-Wheel Drive',\r\n      transmission: 'Single-Speed',\r\n      mileage: 0,\r\n      description: 'The Ford Mustang Mach-E is a battery electric compact crossover SUV.',\r\n      imageUrl: 'assets/cars/ford-mustang-mach-e.jpg',\r\n      stockQuantity: 4\r\n    },\r\n    {\r\n      id: 4,\r\n      make: 'Skoda',\r\n      model: 'Octavia',\r\n      year: 2023,\r\n      price: 32990,\r\n      color: 'Silver',\r\n      engineType: '2.0L TSI',\r\n      transmission: 'Automatic',\r\n      mileage: 0,\r\n      description: 'The Skoda Octavia is a practical and spacious family car with excellent build quality.',\r\n      imageUrl: 'assets/cars/Skoda Octavia.jpeg',\r\n      stockQuantity: 6\r\n    },\r\n    {\r\n      id: 5,\r\n      make: 'Volkswagen',\r\n      model: 'Polo',\r\n      year: 2023,\r\n      price: 24990,\r\n      color: 'White',\r\n      engineType: '1.5L TSI',\r\n      transmission: 'Automatic',\r\n      mileage: 0,\r\n      description: 'The Volkswagen Polo is a supermini car that offers great value and practicality.',\r\n      imageUrl: 'assets/cars/Volkswagen Polo.jpeg',\r\n      stockQuantity: 10\r\n    },\r\n    {\r\n      id: 6,\r\n      make: 'Ferrari',\r\n      model: '488',\r\n      year: 2023,\r\n      price: 279990,\r\n      color: 'Red',\r\n      engineType: '3.9L V8 Twin-Turbo',\r\n      transmission: 'Automatic',\r\n      mileage: 0,\r\n      description: 'The Ferrari 488 is a mid-engine sports car that represents the pinnacle of Italian automotive engineering.',\r\n      imageUrl: 'assets/cars/Ferrari 488.jpeg',\r\n      stockQuantity: 2\r\n    },\r\n    {\r\n      id: 7,\r\n      make: 'Mercedes-Benz',\r\n      model: 'C-Class',\r\n      year: 2023,\r\n      price: 45990,\r\n      color: 'Black',\r\n      engineType: '2.0L Turbo',\r\n      transmission: 'Automatic',\r\n      mileage: 0,\r\n      description: 'The Mercedes-Benz C-Class is a luxury compact executive car with premium features.',\r\n      imageUrl: 'assets/cars/Mercedes-Benz C-Class.jpeg',\r\n      stockQuantity: 5\r\n    },\r\n    {\r\n      id: 8,\r\n      make: 'Jaguar',\r\n      model: 'F-Type',\r\n      year: 2023,\r\n      price: 72990,\r\n      color: 'British Racing Green',\r\n      engineType: '5.0L V8',\r\n      transmission: 'Automatic',\r\n      mileage: 0,\r\n      description: 'The Jaguar F-Type is a luxury sports car that combines British elegance with performance.',\r\n      imageUrl: 'assets/cars/Jaguar F-Type.jpeg',\r\n      stockQuantity: 3\r\n    },\r\n    {\r\n      id: 9,\r\n      make: 'BMW',\r\n      model: 'X5',\r\n      year: 2023,\r\n      price: 65990,\r\n      color: 'Blue',\r\n      engineType: '3.0L Twin-Turbo',\r\n      transmission: 'Automatic',\r\n      mileage: 0,\r\n      description: 'The BMW X5 is a luxury SUV that offers a perfect blend of comfort and performance.',\r\n      imageUrl: 'assets/cars/BMW X5.jpeg',\r\n      stockQuantity: 4\r\n    },\r\n    {\r\n      id: 10,\r\n      make: 'Audi',\r\n      model: 'A4',\r\n      year: 2023,\r\n      price: 42990,\r\n      color: 'Gray',\r\n      engineType: '2.0L TFSI',\r\n      transmission: 'Automatic',\r\n      mileage: 0,\r\n      description: 'The Audi A4 is a premium compact executive car with advanced technology and comfort.',\r\n      imageUrl: 'assets/cars/Audi A4.jpeg',\r\n      stockQuantity: 7\r\n    },\r\n    {\r\n      id: 11,\r\n      make: 'Mercedes-Benz',\r\n      model: 'S-Class',\r\n      year: 2023,\r\n      price: 119990,\r\n      color: 'Silver',\r\n      engineType: '3.0L Hybrid',\r\n      transmission: 'Automatic',\r\n      mileage: 0,\r\n      description: 'The Mercedes-Benz S-Class is the flagship luxury sedan with cutting-edge technology and comfort.',\r\n      imageUrl: 'assets/cars/Benz.jpeg',\r\n      stockQuantity: 3\r\n    }\r\n  ];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCars(): Observable<Car[]> {\r\n    // For development, return mock data\r\n    // return of(this.mockCars);\r\n    // When backend is ready, uncomment this:\r\n    return this.http.get<Car[]>(this.apiUrl);\r\n  }\r\n\r\n  getCarById(id: number): Observable<Car> {\r\n    // For development, return mock data\r\n    // const car = this.mockCars.find(c => c.id === id);\r\n    // return of(car!);\r\n    // When backend is ready, uncomment this:\r\n    return this.http.get<Car>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  searchCars(searchTerm: string): Observable<Car[]> {\r\n    // For development, return filtered mock data\r\n    // const filtered = this.mockCars.filter(car => \r\n    //   car.model.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    //   car.make.toLowerCase().includes(searchTerm.toLowerCase())\r\n    // );\r\n    // return of(filtered);\r\n    // When backend is ready, uncomment this:\r\n    return this.http.get<Car[]>(`${this.apiUrl}/search?term=${searchTerm}`);\r\n  }\r\n\r\n  getCarsByBrand(brand: string): Observable<Car[]> {\r\n    // For development, return filtered mock data\r\n    // const filtered = this.mockCars.filter(car => car.make === brand);\r\n    // return of(filtered);\r\n    // When backend is ready, uncomment this:\r\n    return this.http.get<Car[]>(`${this.apiUrl}/brand/${brand}`);\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}