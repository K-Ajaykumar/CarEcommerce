{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CarService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/api/cars`;\n  }\n  getHttpOptions() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getCars() {\n    return this.http.get(this.apiUrl, this.getHttpOptions());\n  }\n  getCarById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`, this.getHttpOptions());\n  }\n  searchCars(searchTerm) {\n    return this.http.get(`${this.apiUrl}/search?term=${searchTerm}`, this.getHttpOptions());\n  }\n  getCarsByBrand(brand) {\n    return this.http.get(`${this.apiUrl}/brand/${brand}`, this.getHttpOptions());\n  }\n  static {\n    this.ɵfac = function CarService_Factory(t) {\n      return new (t || CarService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CarService,\n      factory: CarService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","environment","CarService","constructor","http","apiUrl","getHttpOptions","headers","getCars","get","getCarById","id","searchCars","searchTerm","getCarsByBrand","brand","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\car.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Car } from '../models/car.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarService {\r\n  private apiUrl = `${environment.apiUrl}/api/cars`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private getHttpOptions(): { headers: HttpHeaders } {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n  }\r\n\r\n  getCars(): Observable<Car[]> {\r\n    return this.http.get<Car[]>(this.apiUrl, this.getHttpOptions());\r\n  }\r\n\r\n  getCarById(id: number): Observable<Car> {\r\n    return this.http.get<Car>(`${this.apiUrl}/${id}`, this.getHttpOptions());\r\n  }\r\n\r\n  searchCars(searchTerm: string): Observable<Car[]> {\r\n    return this.http.get<Car[]>(`${this.apiUrl}/search?term=${searchTerm}`, this.getHttpOptions());\r\n  }\r\n\r\n  getCarsByBrand(brand: string): Observable<Car[]> {\r\n    return this.http.get<Car[]>(`${this.apiUrl}/brand/${brand}`, this.getHttpOptions());\r\n  }\r\n} \r\n "],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,WAAW;EAET;EAEhCC,cAAcA,CAAA;IACpB,OAAO;MACLC,OAAO,EAAE,IAAIP,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EACH;EAEAQ,OAAOA,CAAA;IACL,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAQ,IAAI,CAACJ,MAAM,EAAE,IAAI,CAACC,cAAc,EAAE,CAAC;EACjE;EAEAI,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAM,GAAG,IAAI,CAACJ,MAAM,IAAIM,EAAE,EAAE,EAAE,IAAI,CAACL,cAAc,EAAE,CAAC;EAC1E;EAEAM,UAAUA,CAACC,UAAkB;IAC3B,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAAQ,GAAG,IAAI,CAACJ,MAAM,gBAAgBQ,UAAU,EAAE,EAAE,IAAI,CAACP,cAAc,EAAE,CAAC;EAChG;EAEAQ,cAAcA,CAACC,KAAa;IAC1B,OAAO,IAAI,CAACX,IAAI,CAACK,GAAG,CAAQ,GAAG,IAAI,CAACJ,MAAM,UAAUU,KAAK,EAAE,EAAE,IAAI,CAACT,cAAc,EAAE,CAAC;EACrF;;;uBA3BWJ,UAAU,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAVjB,UAAU;MAAAkB,OAAA,EAAVlB,UAAU,CAAAmB,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}