{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5083/api/cart';\n    this.cartItemsSubject = new BehaviorSubject([]);\n    this.cartItems$ = this.cartItemsSubject.asObservable();\n    this.loadCartItems();\n  }\n  loadCartItems() {\n    this.http.get(this.apiUrl).subscribe({\n      next: items => this.cartItemsSubject.next(items),\n      error: error => console.error('Error loading cart items:', error)\n    });\n  }\n  addToCart(carId) {\n    return this.http.post(`${this.apiUrl}`, {\n      carId\n    }).pipe(tap(() => this.loadCartItems()));\n  }\n  updateCartItem(itemId, quantity) {\n    return this.http.put(`${this.apiUrl}/${itemId}`, {\n      quantity\n    }).pipe(tap(() => this.loadCartItems()));\n  }\n  removeFromCart(itemId) {\n    return this.http.delete(`${this.apiUrl}/${itemId}`).pipe(tap(() => this.loadCartItems()));\n  }\n  clearCart() {\n    return this.http.delete(`${this.apiUrl}`).pipe(tap(() => this.cartItemsSubject.next([])));\n  }\n  getCartTotal() {\n    return this.cartItems$.pipe(map(items => items.reduce((total, item) => total + item.carPrice * item.quantity, 0)));\n  }\n  getCartItemCount() {\n    return this.cartItems$.pipe(map(items => items.reduce((count, item) => count + item.quantity, 0)));\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","map","tap","CartService","constructor","http","apiUrl","cartItemsSubject","cartItems$","asObservable","loadCartItems","get","subscribe","next","items","error","console","addToCart","carId","post","pipe","updateCartItem","itemId","quantity","put","removeFromCart","delete","clearCart","getCartTotal","reduce","total","item","carPrice","getCartItemCount","count","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { CartItem } from '../models/cart-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private apiUrl = 'http://localhost:5083/api/cart';\r\n  private cartItemsSubject = new BehaviorSubject<CartItem[]>([]);\r\n  cartItems$ = this.cartItemsSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.loadCartItems();\r\n  }\r\n\r\n  loadCartItems(): void {\r\n    this.http.get<CartItem[]>(this.apiUrl).subscribe({\r\n      next: (items) => this.cartItemsSubject.next(items),\r\n      error: (error) => console.error('Error loading cart items:', error)\r\n    });\r\n  }\r\n\r\n  addToCart(carId: number): Observable<CartItem> {\r\n    return this.http.post<CartItem>(`${this.apiUrl}`, { carId }).pipe(\r\n      tap(() => this.loadCartItems())\r\n    );\r\n  }\r\n\r\n  updateCartItem(itemId: number, quantity: number): Observable<CartItem> {\r\n    return this.http.put<CartItem>(`${this.apiUrl}/${itemId}`, { quantity }).pipe(\r\n      tap(() => this.loadCartItems())\r\n    );\r\n  }\r\n\r\n  removeFromCart(itemId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${itemId}`).pipe(\r\n      tap(() => this.loadCartItems())\r\n    );\r\n  }\r\n\r\n  clearCart(): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}`).pipe(\r\n      tap(() => this.cartItemsSubject.next([]))\r\n    );\r\n  }\r\n\r\n  getCartTotal(): Observable<number> {\r\n    return this.cartItems$.pipe(\r\n      map(items => items.reduce((total, item) => total + (item.carPrice * item.quantity), 0))\r\n    );\r\n  }\r\n\r\n  getCartItemCount(): Observable<number> {\r\n    return this.cartItems$.pipe(\r\n      map(items => items.reduce((count, item) => count + item.quantity, 0))\r\n    );\r\n  }\r\n} "],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAASC,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;;;AAMzC,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,MAAM,GAAG,gCAAgC;IACzC,KAAAC,gBAAgB,GAAG,IAAIP,eAAe,CAAa,EAAE,CAAC;IAC9D,KAAAQ,UAAU,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;IAG/C,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAaA,CAAA;IACX,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,IAAI,CAACL,MAAM,CAAC,CAACM,SAAS,CAAC;MAC/CC,IAAI,EAAGC,KAAK,IAAK,IAAI,CAACP,gBAAgB,CAACM,IAAI,CAACC,KAAK,CAAC;MAClDC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK;KACnE,CAAC;EACJ;EAEAE,SAASA,CAACC,KAAa;IACrB,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAW,GAAG,IAAI,CAACb,MAAM,EAAE,EAAE;MAAEY;IAAK,CAAE,CAAC,CAACE,IAAI,CAC/DlB,GAAG,CAAC,MAAM,IAAI,CAACQ,aAAa,EAAE,CAAC,CAChC;EACH;EAEAW,cAAcA,CAACC,MAAc,EAAEC,QAAgB;IAC7C,OAAO,IAAI,CAAClB,IAAI,CAACmB,GAAG,CAAW,GAAG,IAAI,CAAClB,MAAM,IAAIgB,MAAM,EAAE,EAAE;MAAEC;IAAQ,CAAE,CAAC,CAACH,IAAI,CAC3ElB,GAAG,CAAC,MAAM,IAAI,CAACQ,aAAa,EAAE,CAAC,CAChC;EACH;EAEAe,cAAcA,CAACH,MAAc;IAC3B,OAAO,IAAI,CAACjB,IAAI,CAACqB,MAAM,CAAO,GAAG,IAAI,CAACpB,MAAM,IAAIgB,MAAM,EAAE,CAAC,CAACF,IAAI,CAC5DlB,GAAG,CAAC,MAAM,IAAI,CAACQ,aAAa,EAAE,CAAC,CAChC;EACH;EAEAiB,SAASA,CAAA;IACP,OAAO,IAAI,CAACtB,IAAI,CAACqB,MAAM,CAAO,GAAG,IAAI,CAACpB,MAAM,EAAE,CAAC,CAACc,IAAI,CAClDlB,GAAG,CAAC,MAAM,IAAI,CAACK,gBAAgB,CAACM,IAAI,CAAC,EAAE,CAAC,CAAC,CAC1C;EACH;EAEAe,YAAYA,CAAA;IACV,OAAO,IAAI,CAACpB,UAAU,CAACY,IAAI,CACzBnB,GAAG,CAACa,KAAK,IAAIA,KAAK,CAACe,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAIC,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACR,QAAS,EAAE,CAAC,CAAC,CAAC,CACxF;EACH;EAEAU,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACzB,UAAU,CAACY,IAAI,CACzBnB,GAAG,CAACa,KAAK,IAAIA,KAAK,CAACe,MAAM,CAAC,CAACK,KAAK,EAAEH,IAAI,KAAKG,KAAK,GAAGH,IAAI,CAACR,QAAQ,EAAE,CAAC,CAAC,CAAC,CACtE;EACH;;;uBAlDWpB,WAAW,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXnC,WAAW;MAAAoC,OAAA,EAAXpC,WAAW,CAAAqC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}