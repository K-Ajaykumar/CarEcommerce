{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cartItems = new BehaviorSubject([]);\n    this.cartItems$ = this.cartItems.asObservable();\n    this.cartCount$ = this.cartItems$.pipe(map(items => items.reduce((total, item) => total + item.quantity, 0)));\n    this.cartTotal$ = this.cartItems$.pipe(map(items => items.reduce((total, item) => total + item.car.price * item.quantity, 0)));\n    // Load cart from localStorage on initialization\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      this.cartItems.next(JSON.parse(savedCart));\n    }\n  }\n  addToCart(car, quantity = 1) {\n    const currentItems = this.cartItems.value;\n    const existingItemIndex = currentItems.findIndex(item => item.car.id === car.id);\n    let updatedItems;\n    if (existingItemIndex !== -1) {\n      // Update existing item quantity\n      updatedItems = [...currentItems];\n      updatedItems[existingItemIndex] = {\n        ...updatedItems[existingItemIndex],\n        quantity: updatedItems[existingItemIndex].quantity + quantity\n      };\n    } else {\n      // Add new item\n      updatedItems = [...currentItems, {\n        car,\n        quantity\n      }];\n    }\n    this.cartItems.next(updatedItems);\n    this.saveToLocalStorage();\n  }\n  removeFromCart(carId) {\n    const updatedItems = this.cartItems.value.filter(item => item.car.id !== carId);\n    this.cartItems.next(updatedItems);\n    this.saveToLocalStorage();\n  }\n  updateQuantity(carId, quantity) {\n    if (quantity <= 0) {\n      this.removeFromCart(carId);\n      return;\n    }\n    const updatedItems = this.cartItems.value.map(item => item.car.id === carId ? {\n      ...item,\n      quantity\n    } : item);\n    this.cartItems.next(updatedItems);\n    this.saveToLocalStorage();\n  }\n  isInCart(carId) {\n    return this.cartItems.value.some(item => item.car.id === carId);\n  }\n  clearCart() {\n    this.cartItems.next([]);\n    this.saveToLocalStorage();\n  }\n  saveToLocalStorage() {\n    localStorage.setItem('cart', JSON.stringify(this.cartItems.value));\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","map","CartService","constructor","cartItems","cartItems$","asObservable","cartCount$","pipe","items","reduce","total","item","quantity","cartTotal$","car","price","savedCart","localStorage","getItem","next","JSON","parse","addToCart","currentItems","value","existingItemIndex","findIndex","id","updatedItems","saveToLocalStorage","removeFromCart","carId","filter","updateQuantity","isInCart","some","clearCart","setItem","stringify","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Car } from '../models/car.model';\r\n\r\nexport interface CartItem {\r\n  car: Car;\r\n  quantity: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private cartItems = new BehaviorSubject<CartItem[]>([]);\r\n  cartItems$ = this.cartItems.asObservable();\r\n\r\n  cartCount$ = this.cartItems$.pipe(\r\n    map(items => items.reduce((total, item) => total + item.quantity, 0))\r\n  );\r\n\r\n  cartTotal$ = this.cartItems$.pipe(\r\n    map(items => items.reduce((total, item) => total + (item.car.price * item.quantity), 0))\r\n  );\r\n\r\n  constructor() {\r\n    // Load cart from localStorage on initialization\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      this.cartItems.next(JSON.parse(savedCart));\r\n    }\r\n  }\r\n\r\n  addToCart(car: Car, quantity: number = 1): void {\r\n    const currentItems = this.cartItems.value;\r\n    const existingItemIndex = currentItems.findIndex(item => item.car.id === car.id);\r\n\r\n    let updatedItems: CartItem[];\r\n    if (existingItemIndex !== -1) {\r\n      // Update existing item quantity\r\n      updatedItems = [...currentItems];\r\n      updatedItems[existingItemIndex] = {\r\n        ...updatedItems[existingItemIndex],\r\n        quantity: updatedItems[existingItemIndex].quantity + quantity\r\n      };\r\n    } else {\r\n      // Add new item\r\n      updatedItems = [...currentItems, { car, quantity }];\r\n    }\r\n\r\n    this.cartItems.next(updatedItems);\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  removeFromCart(carId: number): void {\r\n    const updatedItems = this.cartItems.value.filter(item => item.car.id !== carId);\r\n    this.cartItems.next(updatedItems);\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  updateQuantity(carId: number, quantity: number): void {\r\n    if (quantity <= 0) {\r\n      this.removeFromCart(carId);\r\n      return;\r\n    }\r\n\r\n    const updatedItems = this.cartItems.value.map(item =>\r\n      item.car.id === carId ? { ...item, quantity } : item\r\n    );\r\n    this.cartItems.next(updatedItems);\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  isInCart(carId: number): boolean {\r\n    return this.cartItems.value.some(item => item.car.id === carId);\r\n  }\r\n\r\n  clearCart(): void {\r\n    this.cartItems.next([]);\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  private saveToLocalStorage(): void {\r\n    localStorage.setItem('cart', JSON.stringify(this.cartItems.value));\r\n  }\r\n} "],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAASC,GAAG,QAAQ,gBAAgB;;AAWpC,OAAM,MAAOC,WAAW;EAYtBC,YAAA;IAXQ,KAAAC,SAAS,GAAG,IAAIJ,eAAe,CAAa,EAAE,CAAC;IACvD,KAAAK,UAAU,GAAG,IAAI,CAACD,SAAS,CAACE,YAAY,EAAE;IAE1C,KAAAC,UAAU,GAAG,IAAI,CAACF,UAAU,CAACG,IAAI,CAC/BP,GAAG,CAACQ,KAAK,IAAIA,KAAK,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC,CAAC,CACtE;IAED,KAAAC,UAAU,GAAG,IAAI,CAACT,UAAU,CAACG,IAAI,CAC/BP,GAAG,CAACQ,KAAK,IAAIA,KAAK,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAIC,IAAI,CAACG,GAAG,CAACC,KAAK,GAAGJ,IAAI,CAACC,QAAS,EAAE,CAAC,CAAC,CAAC,CACzF;IAGC;IACA,MAAMI,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACb,IAAI,CAACb,SAAS,CAACgB,IAAI,CAACC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC,CAAC;IAC5C;EACF;EAEAM,SAASA,CAACR,GAAQ,EAAEF,QAAA,GAAmB,CAAC;IACtC,MAAMW,YAAY,GAAG,IAAI,CAACpB,SAAS,CAACqB,KAAK;IACzC,MAAMC,iBAAiB,GAAGF,YAAY,CAACG,SAAS,CAACf,IAAI,IAAIA,IAAI,CAACG,GAAG,CAACa,EAAE,KAAKb,GAAG,CAACa,EAAE,CAAC;IAEhF,IAAIC,YAAwB;IAC5B,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC5B;MACAG,YAAY,GAAG,CAAC,GAAGL,YAAY,CAAC;MAChCK,YAAY,CAACH,iBAAiB,CAAC,GAAG;QAChC,GAAGG,YAAY,CAACH,iBAAiB,CAAC;QAClCb,QAAQ,EAAEgB,YAAY,CAACH,iBAAiB,CAAC,CAACb,QAAQ,GAAGA;OACtD;IACH,CAAC,MAAM;MACL;MACAgB,YAAY,GAAG,CAAC,GAAGL,YAAY,EAAE;QAAET,GAAG;QAAEF;MAAQ,CAAE,CAAC;IACrD;IAEA,IAAI,CAACT,SAAS,CAACgB,IAAI,CAACS,YAAY,CAAC;IACjC,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAC,cAAcA,CAACC,KAAa;IAC1B,MAAMH,YAAY,GAAG,IAAI,CAACzB,SAAS,CAACqB,KAAK,CAACQ,MAAM,CAACrB,IAAI,IAAIA,IAAI,CAACG,GAAG,CAACa,EAAE,KAAKI,KAAK,CAAC;IAC/E,IAAI,CAAC5B,SAAS,CAACgB,IAAI,CAACS,YAAY,CAAC;IACjC,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAI,cAAcA,CAACF,KAAa,EAAEnB,QAAgB;IAC5C,IAAIA,QAAQ,IAAI,CAAC,EAAE;MACjB,IAAI,CAACkB,cAAc,CAACC,KAAK,CAAC;MAC1B;IACF;IAEA,MAAMH,YAAY,GAAG,IAAI,CAACzB,SAAS,CAACqB,KAAK,CAACxB,GAAG,CAACW,IAAI,IAChDA,IAAI,CAACG,GAAG,CAACa,EAAE,KAAKI,KAAK,GAAG;MAAE,GAAGpB,IAAI;MAAEC;IAAQ,CAAE,GAAGD,IAAI,CACrD;IACD,IAAI,CAACR,SAAS,CAACgB,IAAI,CAACS,YAAY,CAAC;IACjC,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAK,QAAQA,CAACH,KAAa;IACpB,OAAO,IAAI,CAAC5B,SAAS,CAACqB,KAAK,CAACW,IAAI,CAACxB,IAAI,IAAIA,IAAI,CAACG,GAAG,CAACa,EAAE,KAAKI,KAAK,CAAC;EACjE;EAEAK,SAASA,CAAA;IACP,IAAI,CAACjC,SAAS,CAACgB,IAAI,CAAC,EAAE,CAAC;IACvB,IAAI,CAACU,kBAAkB,EAAE;EAC3B;EAEQA,kBAAkBA,CAAA;IACxBZ,YAAY,CAACoB,OAAO,CAAC,MAAM,EAAEjB,IAAI,CAACkB,SAAS,CAAC,IAAI,CAACnC,SAAS,CAACqB,KAAK,CAAC,CAAC;EACpE;;;uBAvEWvB,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAsC,OAAA,EAAXtC,WAAW,CAAAuC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}