{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class CartService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://localhost:5083/api/cart';\n    this.cartItemsSubject = new BehaviorSubject([]);\n    this.cartItems$ = this.cartItemsSubject.asObservable();\n    this.loadCartItems();\n  }\n  getHeaders() {\n    const token = this.authService.getToken();\n    return {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  handleError(error) {\n    let errorMessage = 'An error occurred';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      switch (error.status) {\n        case 401:\n          errorMessage = 'Please login to access cart';\n          break;\n        case 404:\n          errorMessage = 'Item not found';\n          break;\n        case 400:\n          errorMessage = error.error?.message || 'Invalid request';\n          break;\n        default:\n          errorMessage = `Error: ${error.status} - ${error.error?.message || 'Unknown error'}`;\n      }\n    }\n    return throwError(() => new Error(errorMessage));\n  }\n  loadCartItems() {\n    this.http.get(this.apiUrl, this.getHeaders()).pipe(catchError(this.handleError)).subscribe({\n      next: items => this.cartItemsSubject.next(items),\n      error: error => console.error('Error loading cart items:', error)\n    });\n  }\n  addToCart(carId, quantity = 1) {\n    return this.http.post(`${this.apiUrl}`, {\n      carId,\n      quantity\n    }, this.getHeaders()).pipe(tap(() => this.loadCartItems()), catchError(this.handleError));\n  }\n  updateCartItem(itemId, quantity) {\n    return this.http.put(`${this.apiUrl}/${itemId}`, {\n      quantity\n    }, this.getHeaders()).pipe(tap(() => this.loadCartItems()), catchError(this.handleError));\n  }\n  removeFromCart(itemId) {\n    return this.http.delete(`${this.apiUrl}/${itemId}`, this.getHeaders()).pipe(tap(() => this.loadCartItems()), catchError(this.handleError));\n  }\n  clearCart() {\n    return this.http.delete(`${this.apiUrl}/clear`, this.getHeaders()).pipe(tap(() => this.cartItemsSubject.next([])), catchError(this.handleError));\n  }\n  getCartTotal() {\n    return this.cartItems$.pipe(map(items => items.reduce((total, item) => total + item.price * item.quantity, 0)));\n  }\n  getCartItemCount() {\n    return this.cartItems$.pipe(map(items => items.reduce((count, item) => count + item.quantity, 0)));\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","BehaviorSubject","throwError","map","tap","catchError","CartService","constructor","http","authService","apiUrl","cartItemsSubject","cartItems$","asObservable","loadCartItems","getHeaders","token","getToken","headers","handleError","error","errorMessage","ErrorEvent","message","status","Error","get","pipe","subscribe","next","items","console","addToCart","carId","quantity","post","updateCartItem","itemId","put","removeFromCart","delete","clearCart","getCartTotal","reduce","total","item","price","getCartItemCount","count","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { map, tap, catchError } from 'rxjs/operators';\r\nimport { CartItem } from '../models/cart-item.model';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private apiUrl = 'http://localhost:5083/api/cart';\r\n  private cartItemsSubject = new BehaviorSubject<CartItem[]>([]);\r\n  cartItems$ = this.cartItemsSubject.asObservable();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) {\r\n    this.loadCartItems();\r\n  }\r\n\r\n  private getHeaders(): { headers: HttpHeaders } {\r\n    const token = this.authService.getToken();\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'An error occurred';\r\n    \r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Server-side error\r\n      switch (error.status) {\r\n        case 401:\r\n          errorMessage = 'Please login to access cart';\r\n          break;\r\n        case 404:\r\n          errorMessage = 'Item not found';\r\n          break;\r\n        case 400:\r\n          errorMessage = error.error?.message || 'Invalid request';\r\n          break;\r\n        default:\r\n          errorMessage = `Error: ${error.status} - ${error.error?.message || 'Unknown error'}`;\r\n      }\r\n    }\r\n    \r\n    return throwError(() => new Error(errorMessage));\r\n  }\r\n\r\n  loadCartItems(): void {\r\n    this.http.get<CartItem[]>(this.apiUrl, this.getHeaders())\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n      .subscribe({\r\n        next: (items) => this.cartItemsSubject.next(items),\r\n        error: (error) => console.error('Error loading cart items:', error)\r\n      });\r\n  }\r\n\r\n  addToCart(carId: number, quantity: number = 1): Observable<CartItem> {\r\n    return this.http.post<CartItem>(\r\n      `${this.apiUrl}`,\r\n      { carId, quantity },\r\n      this.getHeaders()\r\n    ).pipe(\r\n      tap(() => this.loadCartItems()),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateCartItem(itemId: number, quantity: number): Observable<CartItem> {\r\n    return this.http.put<CartItem>(\r\n      `${this.apiUrl}/${itemId}`,\r\n      { quantity },\r\n      this.getHeaders()\r\n    ).pipe(\r\n      tap(() => this.loadCartItems()),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  removeFromCart(itemId: number): Observable<void> {\r\n    return this.http.delete<void>(\r\n      `${this.apiUrl}/${itemId}`,\r\n      this.getHeaders()\r\n    ).pipe(\r\n      tap(() => this.loadCartItems()),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  clearCart(): Observable<void> {\r\n    return this.http.delete<void>(\r\n      `${this.apiUrl}/clear`,\r\n      this.getHeaders()\r\n    ).pipe(\r\n      tap(() => this.cartItemsSubject.next([])),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getCartTotal(): Observable<number> {\r\n    return this.cartItems$.pipe(\r\n      map(items => items.reduce((total, item) => total + (item.price * item.quantity), 0))\r\n    );\r\n  }\r\n\r\n  getCartItemCount(): Observable<number> {\r\n    return this.cartItems$.pipe(\r\n      map(items => items.reduce((count, item) => count + item.quantity, 0))\r\n    );\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}