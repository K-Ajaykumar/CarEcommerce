{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { switchMap, take } from 'rxjs/operators';\nimport { forkJoin, Subscription, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/cart.service\";\nimport * as i3 from \"../../services/order.service\";\nimport * as i4 from \"../../services/auth.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/material/snack-bar\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/form-field\";\nfunction PaymentComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Card holder name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Valid 16-digit card number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Valid expiry date required (MM/YY) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Valid 3-digit CVV required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PaymentComponent {\n  constructor(fb, cartService, orderService, authService, router, snackBar) {\n    this.fb = fb;\n    this.cartService = cartService;\n    this.orderService = orderService;\n    this.authService = authService;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.cartTotal$ = this.cartService.getCartTotal();\n    this.isProcessing = false;\n    this.subscriptions = new Subscription();\n    this.initForm();\n  }\n  initForm() {\n    this.paymentForm = this.fb.group({\n      cardName: ['', [Validators.required]],\n      cardNumber: ['', [Validators.required, Validators.pattern('^[0-9]{16}$')]],\n      expiryDate: ['', [Validators.required, Validators.pattern('^(0[1-9]|1[0-2])\\/?([0-9]{2})$')]],\n      cvv: ['', [Validators.required, Validators.pattern('^[0-9]{3}$')]]\n    });\n    // Debug form changes\n    this.paymentForm.valueChanges.subscribe(value => {\n      console.log('Form values:', value);\n      console.log('Form valid:', this.paymentForm.valid);\n      console.log('Form errors:', this.paymentForm.errors);\n    });\n  }\n  ngOnInit() {\n    // Check if shipping address exists\n    const shippingAddress = sessionStorage.getItem('shippingAddress');\n    if (!shippingAddress) {\n      this.snackBar.open('Please provide shipping address first', 'Close', {\n        duration: 3000\n      });\n      this.router.navigate(['/checkout']);\n      return;\n    }\n    // Debug initial state\n    console.log('Component initialized');\n    console.log('Shipping address:', shippingAddress);\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  onSubmit() {\n    console.log('Submit button clicked'); // Debug log\n    console.log('Form state:', {\n      valid: this.paymentForm.valid,\n      value: this.paymentForm.value,\n      errors: this.paymentForm.errors,\n      isProcessing: this.isProcessing\n    });\n    if (this.paymentForm.valid && !this.isProcessing) {\n      console.log('Starting order placement...'); // Debug log\n      this.isProcessing = true;\n      // Get shipping address from session storage\n      const shippingAddress = JSON.parse(sessionStorage.getItem('shippingAddress') || '{}');\n      console.log('Shipping address:', shippingAddress); // Debug log\n      if (!Object.keys(shippingAddress).length) {\n        this.isProcessing = false;\n        this.snackBar.open('Missing shipping address. Please try again.', 'Close', {\n          duration: 3000\n        });\n        this.router.navigate(['/checkout']);\n        return;\n      }\n      // Get current cart items and user\n      const sub = forkJoin({\n        cartItems: this.cartService.cartItems$.pipe(take(1)),\n        user: this.authService.user$.pipe(take(1)),\n        total: this.cartService.getCartTotal().pipe(take(1))\n      }).pipe(switchMap(({\n        cartItems,\n        user,\n        total\n      }) => {\n        console.log('Cart items:', cartItems); // Debug log\n        console.log('User:', user); // Debug log\n        console.log('Total:', total); // Debug log\n        if (!user) {\n          throw new Error('Please login to place order');\n        }\n        if (cartItems.length === 0) {\n          throw new Error('Your cart is empty');\n        }\n        const orderData = {\n          userId: user.userId.toString(),\n          items: cartItems.map(item => ({\n            carId: item.carId.toString(),\n            make: item.make,\n            model: item.model,\n            year: item.year,\n            price: item.price,\n            quantity: item.quantity\n          })),\n          totalAmount: total,\n          shippingAddress: shippingAddress,\n          orderDate: new Date(),\n          status: 'Placed'\n        };\n        console.log('Creating order with data:', orderData); // Debug log\n        return this.orderService.createOrder(orderData).pipe(switchMap(order => {\n          console.log('Order created successfully:', order); // Debug log\n          return this.cartService.clearCart().pipe(switchMap(() => {\n            console.log('Cart cleared successfully'); // Debug log\n            return of(order);\n          }));\n        }));\n      })).subscribe({\n        next: order => {\n          console.log('Order placement complete:', order); // Debug log\n          this.isProcessing = false;\n          sessionStorage.removeItem('shippingAddress');\n          // Show success message before navigation\n          this.snackBar.open('Order placed successfully!', 'Close', {\n            duration: 3000\n          });\n          // Add a small delay before navigation to ensure snackbar is shown\n          setTimeout(() => {\n            console.log('Navigating to orders page...'); // Debug log\n            this.router.navigate(['/orders']).then(() => console.log('Navigation successful'), err => console.error('Navigation failed:', err));\n          }, 100);\n        },\n        error: error => {\n          console.error('Error in order placement:', error); // Debug log\n          this.isProcessing = false;\n          const message = error.message || 'Failed to place order. Please try again.';\n          this.snackBar.open(message, 'Close', {\n            duration: 5000\n          });\n        }\n      });\n      this.subscriptions.add(sub);\n    } else {\n      console.log('Form validation failed:', this.paymentForm.errors); // Debug log\n      Object.keys(this.paymentForm.controls).forEach(key => {\n        const control = this.paymentForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n          console.log(`Invalid field ${key}:`, control.errors); // Debug log\n        }\n      });\n    }\n  }\n  goBack() {\n    this.router.navigate(['/checkout']);\n  }\n  static {\n    this.ɵfac = function PaymentComponent_Factory(t) {\n      return new (t || PaymentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.OrderService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PaymentComponent,\n      selectors: [[\"app-payment\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 38,\n      vars: 12,\n      consts: [[1, \"payment-container\"], [1, \"order-summary\"], [1, \"summary-details\"], [1, \"payment-form\", 3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 1, \"form-field\"], [\"matInput\", \"\", \"formControlName\", \"cardName\", \"placeholder\", \"Enter name as shown on card\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"cardNumber\", \"placeholder\", \"Enter 16-digit card number\", \"maxlength\", \"16\"], [1, \"form-row\"], [\"matInput\", \"\", \"formControlName\", \"expiryDate\", \"placeholder\", \"MM/YY\", \"maxlength\", \"5\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"cvv\", \"placeholder\", \"Enter 3-digit CVV\", \"maxlength\", \"3\"], [1, \"form-actions\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n      template: function PaymentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Payment Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"h3\");\n          i0.ɵɵtext(5, \"Order Summary\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 2)(7, \"p\");\n          i0.ɵɵtext(8);\n          i0.ɵɵpipe(9, \"async\");\n          i0.ɵɵpipe(10, \"currency\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function PaymentComponent_Template_form_ngSubmit_11_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(12, \"mat-form-field\", 4)(13, \"mat-label\");\n          i0.ɵɵtext(14, \"Name on Card\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 5);\n          i0.ɵɵtemplate(16, PaymentComponent_mat_error_16_Template, 2, 0, \"mat-error\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"mat-form-field\", 4)(18, \"mat-label\");\n          i0.ɵɵtext(19, \"Card Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 7);\n          i0.ɵɵtemplate(21, PaymentComponent_mat_error_21_Template, 2, 0, \"mat-error\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 8)(23, \"mat-form-field\", 4)(24, \"mat-label\");\n          i0.ɵɵtext(25, \"Expiry Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(26, \"input\", 9);\n          i0.ɵɵtemplate(27, PaymentComponent_mat_error_27_Template, 2, 0, \"mat-error\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"mat-form-field\", 4)(29, \"mat-label\");\n          i0.ɵɵtext(30, \"CVV\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(31, \"input\", 10);\n          i0.ɵɵtemplate(32, PaymentComponent_mat_error_32_Template, 2, 0, \"mat-error\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(33, \"div\", 11)(34, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function PaymentComponent_Template_button_click_34_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵtext(35, \" Back \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"button\", 13);\n          i0.ɵɵtext(37);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate1(\"Total Amount: \", i0.ɵɵpipeBind1(10, 10, i0.ɵɵpipeBind1(9, 8, ctx.cartTotal$)), \"\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.paymentForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.paymentForm.get(\"cardName\")) == null ? null : tmp_2_0.hasError(\"required\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.paymentForm.get(\"cardNumber\")) == null ? null : tmp_3_0.hasError(\"required\")) || ((tmp_3_0 = ctx.paymentForm.get(\"cardNumber\")) == null ? null : tmp_3_0.hasError(\"pattern\")));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.paymentForm.get(\"expiryDate\")) == null ? null : tmp_4_0.hasError(\"required\")) || ((tmp_4_0 = ctx.paymentForm.get(\"expiryDate\")) == null ? null : tmp_4_0.hasError(\"pattern\")));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.paymentForm.get(\"cvv\")) == null ? null : tmp_5_0.hasError(\"required\")) || ((tmp_5_0 = ctx.paymentForm.get(\"cvv\")) == null ? null : tmp_5_0.hasError(\"pattern\")));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.paymentForm.invalid || ctx.isProcessing);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isProcessing ? \"Processing...\" : \"Place Order\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i7.NgIf, i7.AsyncPipe, i7.CurrencyPipe, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, MatSnackBarModule, MatButtonModule, i8.MatButton, MatInputModule, i9.MatInput, i10.MatFormField, i10.MatLabel, i10.MatError, MatFormFieldModule],\n      styles: [\".payment-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  max-width: 600px;\\n  margin: 0 auto;\\n}\\n\\n.order-summary[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  padding: 15px;\\n  border-radius: 4px;\\n  margin-bottom: 20px;\\n}\\n\\n.summary-details[_ngcontent-%COMP%] {\\n  font-size: 1.2em;\\n  color: #0066cc;\\n}\\n\\n.payment-form[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 20px;\\n  border-radius: 4px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  display: flex;\\n  flex-direction: column;\\n  gap: 16px;\\n}\\n\\n.form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.form-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 16px;\\n}\\n\\n.form-row[_ngcontent-%COMP%]   .form-field[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.form-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: 16px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  min-width: 120px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wYXltZW50L3BheW1lbnQuY29tcG9uZW50LnRzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vYW5ndWxhciUyMHByb2plY3QvY2FyL2Zyb250ZW5kL2Nhci1lY29tbWVyY2UtZnJvbnRlbmQvc3JjL2FwcC9jb21wb25lbnRzL3BheW1lbnQvcGF5bWVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDRSxhQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0FDQU47O0FER0k7RUFDRSx5QkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FDQU47O0FER0k7RUFDRSxnQkFBQTtFQUNBLGNBQUE7QUNBTjs7QURHSTtFQUNFLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0Esd0NBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxTQUFBO0FDQU47O0FER0k7RUFDRSxXQUFBO0FDQU47O0FER0k7RUFDRSxhQUFBO0VBQ0EsU0FBQTtBQ0FOOztBREdJO0VBQ0UsT0FBQTtBQ0FOOztBREdJO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsZ0JBQUE7QUNBTjs7QURHSTtFQUNFLGdCQUFBO0FDQU4iLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAucGF5bWVudC1jb250YWluZXIge1xuICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgIG1heC13aWR0aDogNjAwcHg7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG5cbiAgICAub3JkZXItc3VtbWFyeSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xuICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgfVxuXG4gICAgLnN1bW1hcnktZGV0YWlscyB7XG4gICAgICBmb250LXNpemU6IDEuMmVtO1xuICAgICAgY29sb3I6ICMwMDY2Y2M7XG4gICAgfVxuXG4gICAgLnBheW1lbnQtZm9ybSB7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLDAsMCwwLjEpO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBnYXA6IDE2cHg7XG4gICAgfVxuXG4gICAgLmZvcm0tZmllbGQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgLmZvcm0tcm93IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBnYXA6IDE2cHg7XG4gICAgfVxuXG4gICAgLmZvcm0tcm93IC5mb3JtLWZpZWxkIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgfVxuXG4gICAgLmZvcm0tYWN0aW9ucyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgbWFyZ2luLXRvcDogMTZweDtcbiAgICB9XG5cbiAgICBidXR0b24ge1xuICAgICAgbWluLXdpZHRoOiAxMjBweDtcbiAgICB9XG4gICIsIi5wYXltZW50LWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ub3JkZXItc3VtbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XG4gIHBhZGRpbmc6IDE1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLnN1bW1hcnktZGV0YWlscyB7XG4gIGZvbnQtc2l6ZTogMS4yZW07XG4gIGNvbG9yOiAjMDA2NmNjO1xufVxuXG4ucGF5bWVudC1mb3JtIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZ2FwOiAxNnB4O1xufVxuXG4uZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZm9ybS1yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDE2cHg7XG59XG5cbi5mb3JtLXJvdyAuZm9ybS1maWVsZCB7XG4gIGZsZXg6IDE7XG59XG5cbi5mb3JtLWFjdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG1hcmdpbi10b3A6IDE2cHg7XG59XG5cbmJ1dHRvbiB7XG4gIG1pbi13aWR0aDogMTIwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Validators","ReactiveFormsModule","MatSnackBarModule","MatButtonModule","MatInputModule","MatFormFieldModule","switchMap","take","forkJoin","Subscription","of","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PaymentComponent","constructor","fb","cartService","orderService","authService","router","snackBar","cartTotal$","getCartTotal","isProcessing","subscriptions","initForm","paymentForm","group","cardName","required","cardNumber","pattern","expiryDate","cvv","valueChanges","subscribe","value","console","log","valid","errors","ngOnInit","shippingAddress","sessionStorage","getItem","open","duration","navigate","ngOnDestroy","unsubscribe","onSubmit","JSON","parse","Object","keys","length","sub","cartItems","cartItems$","pipe","user","user$","total","Error","orderData","userId","toString","items","map","item","carId","make","model","year","price","quantity","totalAmount","orderDate","Date","status","createOrder","order","clearCart","next","removeItem","setTimeout","then","err","error","message","add","controls","forEach","key","control","get","invalid","markAsTouched","goBack","ɵɵdirectiveInject","i1","FormBuilder","i2","CartService","i3","OrderService","i4","AuthService","i5","Router","i6","MatSnackBar","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","PaymentComponent_Template","rf","ctx","ɵɵlistener","PaymentComponent_Template_form_ngSubmit_11_listener","ɵɵelement","ɵɵtemplate","PaymentComponent_mat_error_16_Template","PaymentComponent_mat_error_21_Template","PaymentComponent_mat_error_27_Template","PaymentComponent_mat_error_32_Template","PaymentComponent_Template_button_click_34_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty","tmp_2_0","hasError","tmp_3_0","tmp_4_0","tmp_5_0","i7","NgIf","AsyncPipe","CurrencyPipe","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","FormGroupDirective","FormControlName","i8","MatButton","i9","MatInput","i10","MatFormField","MatLabel","MatError","styles"],"sources":["C:\\angular project\\car\\frontend\\car-ecommerce-frontend\\src\\app\\components\\payment\\payment.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CartService } from '../../services/cart.service';\r\nimport { OrderService } from '../../services/order.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { switchMap, take, catchError } from 'rxjs/operators';\r\nimport { forkJoin, Subscription, of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule\r\n  ],\r\n  template: `\r\n    <div class=\"payment-container\">\r\n      <h2>Payment Details</h2>\r\n      \r\n      <div class=\"order-summary\">\r\n        <h3>Order Summary</h3>\r\n        <div class=\"summary-details\">\r\n          <p>Total Amount: {{ cartTotal$ | async | currency }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <form [formGroup]=\"paymentForm\" (ngSubmit)=\"onSubmit()\" class=\"payment-form\">\r\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\r\n          <mat-label>Name on Card</mat-label>\r\n          <input \r\n            matInput\r\n            formControlName=\"cardName\"\r\n            placeholder=\"Enter name as shown on card\"\r\n          >\r\n          <mat-error *ngIf=\"paymentForm.get('cardName')?.hasError('required')\">\r\n            Card holder name is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\r\n          <mat-label>Card Number</mat-label>\r\n          <input \r\n            matInput\r\n            formControlName=\"cardNumber\"\r\n            placeholder=\"Enter 16-digit card number\"\r\n            maxlength=\"16\"\r\n          >\r\n          <mat-error *ngIf=\"paymentForm.get('cardNumber')?.hasError('required') || paymentForm.get('cardNumber')?.hasError('pattern')\">\r\n            Valid 16-digit card number is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <div class=\"form-row\">\r\n          <mat-form-field appearance=\"outline\" class=\"form-field\">\r\n            <mat-label>Expiry Date</mat-label>\r\n            <input \r\n              matInput\r\n              formControlName=\"expiryDate\"\r\n              placeholder=\"MM/YY\"\r\n              maxlength=\"5\"\r\n            >\r\n            <mat-error *ngIf=\"paymentForm.get('expiryDate')?.hasError('required') || paymentForm.get('expiryDate')?.hasError('pattern')\">\r\n              Valid expiry date required (MM/YY)\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"outline\" class=\"form-field\">\r\n            <mat-label>CVV</mat-label>\r\n            <input \r\n              matInput\r\n              type=\"password\"\r\n              formControlName=\"cvv\"\r\n              placeholder=\"Enter 3-digit CVV\"\r\n              maxlength=\"3\"\r\n            >\r\n            <mat-error *ngIf=\"paymentForm.get('cvv')?.hasError('required') || paymentForm.get('cvv')?.hasError('pattern')\">\r\n              Valid 3-digit CVV required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button mat-stroked-button type=\"button\" (click)=\"goBack()\">\r\n            Back\r\n          </button>\r\n          <button \r\n            mat-raised-button \r\n            color=\"primary\" \r\n            type=\"submit\" \r\n            [disabled]=\"paymentForm.invalid || isProcessing\"\r\n          >\r\n            {{ isProcessing ? 'Processing...' : 'Place Order' }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .payment-container {\r\n      padding: 20px;\r\n      max-width: 600px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .order-summary {\r\n      background-color: #f8f9fa;\r\n      padding: 15px;\r\n      border-radius: 4px;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .summary-details {\r\n      font-size: 1.2em;\r\n      color: #0066cc;\r\n    }\r\n\r\n    .payment-form {\r\n      background: white;\r\n      padding: 20px;\r\n      border-radius: 4px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 16px;\r\n    }\r\n\r\n    .form-field {\r\n      width: 100%;\r\n    }\r\n\r\n    .form-row {\r\n      display: flex;\r\n      gap: 16px;\r\n    }\r\n\r\n    .form-row .form-field {\r\n      flex: 1;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-top: 16px;\r\n    }\r\n\r\n    button {\r\n      min-width: 120px;\r\n    }\r\n  `]\r\n})\r\nexport class PaymentComponent implements OnInit, OnDestroy {\r\n  paymentForm!: FormGroup;\r\n  cartTotal$ = this.cartService.getCartTotal();\r\n  isProcessing = false;\r\n  private subscriptions = new Subscription();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private cartService: CartService,\r\n    private orderService: OrderService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm(): void {\r\n    this.paymentForm = this.fb.group({\r\n      cardName: ['', [Validators.required]],\r\n      cardNumber: ['', [Validators.required, Validators.pattern('^[0-9]{16}$')]],\r\n      expiryDate: ['', [Validators.required, Validators.pattern('^(0[1-9]|1[0-2])\\/?([0-9]{2})$')]],\r\n      cvv: ['', [Validators.required, Validators.pattern('^[0-9]{3}$')]]\r\n    });\r\n\r\n    // Debug form changes\r\n    this.paymentForm.valueChanges.subscribe(value => {\r\n      console.log('Form values:', value);\r\n      console.log('Form valid:', this.paymentForm.valid);\r\n      console.log('Form errors:', this.paymentForm.errors);\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Check if shipping address exists\r\n    const shippingAddress = sessionStorage.getItem('shippingAddress');\r\n    if (!shippingAddress) {\r\n      this.snackBar.open('Please provide shipping address first', 'Close', {\r\n        duration: 3000\r\n      });\r\n      this.router.navigate(['/checkout']);\r\n      return;\r\n    }\r\n\r\n    // Debug initial state\r\n    console.log('Component initialized');\r\n    console.log('Shipping address:', shippingAddress);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.log('Submit button clicked'); // Debug log\r\n    console.log('Form state:', {\r\n      valid: this.paymentForm.valid,\r\n      value: this.paymentForm.value,\r\n      errors: this.paymentForm.errors,\r\n      isProcessing: this.isProcessing\r\n    });\r\n\r\n    if (this.paymentForm.valid && !this.isProcessing) {\r\n      console.log('Starting order placement...'); // Debug log\r\n      this.isProcessing = true;\r\n      \r\n      // Get shipping address from session storage\r\n      const shippingAddress = JSON.parse(sessionStorage.getItem('shippingAddress') || '{}');\r\n      console.log('Shipping address:', shippingAddress); // Debug log\r\n      \r\n      if (!Object.keys(shippingAddress).length) {\r\n        this.isProcessing = false;\r\n        this.snackBar.open('Missing shipping address. Please try again.', 'Close', {\r\n          duration: 3000\r\n        });\r\n        this.router.navigate(['/checkout']);\r\n        return;\r\n      }\r\n\r\n      // Get current cart items and user\r\n      const sub = forkJoin({\r\n        cartItems: this.cartService.cartItems$.pipe(take(1)),\r\n        user: this.authService.user$.pipe(take(1)),\r\n        total: this.cartService.getCartTotal().pipe(take(1))\r\n      }).pipe(\r\n        switchMap(({ cartItems, user, total }) => {\r\n          console.log('Cart items:', cartItems); // Debug log\r\n          console.log('User:', user); // Debug log\r\n          console.log('Total:', total); // Debug log\r\n\r\n          if (!user) {\r\n            throw new Error('Please login to place order');\r\n          }\r\n\r\n          if (cartItems.length === 0) {\r\n            throw new Error('Your cart is empty');\r\n          }\r\n\r\n          const orderData = {\r\n            userId: user.userId.toString(),\r\n            items: cartItems.map(item => ({\r\n              carId: item.carId.toString(),\r\n              make: item.make,\r\n              model: item.model,\r\n              year: item.year,\r\n              price: item.price,\r\n              quantity: item.quantity\r\n            })),\r\n            totalAmount: total,\r\n            shippingAddress: shippingAddress,\r\n            orderDate: new Date(),\r\n            status: 'Placed' as const\r\n          };\r\n\r\n          console.log('Creating order with data:', orderData); // Debug log\r\n\r\n          return this.orderService.createOrder(orderData).pipe(\r\n            switchMap(order => {\r\n              console.log('Order created successfully:', order); // Debug log\r\n              return this.cartService.clearCart().pipe(\r\n                switchMap(() => {\r\n                  console.log('Cart cleared successfully'); // Debug log\r\n                  return of(order);\r\n                })\r\n              );\r\n            })\r\n          );\r\n        })\r\n      ).subscribe({\r\n        next: (order) => {\r\n          console.log('Order placement complete:', order); // Debug log\r\n          this.isProcessing = false;\r\n          sessionStorage.removeItem('shippingAddress');\r\n          \r\n          // Show success message before navigation\r\n          this.snackBar.open('Order placed successfully!', 'Close', {\r\n            duration: 3000\r\n          });\r\n          \r\n          // Add a small delay before navigation to ensure snackbar is shown\r\n          setTimeout(() => {\r\n            console.log('Navigating to orders page...'); // Debug log\r\n            this.router.navigate(['/orders']).then(\r\n              () => console.log('Navigation successful'),\r\n              err => console.error('Navigation failed:', err)\r\n            );\r\n          }, 100);\r\n        },\r\n        error: (error) => {\r\n          console.error('Error in order placement:', error); // Debug log\r\n          this.isProcessing = false;\r\n          const message = error.message || 'Failed to place order. Please try again.';\r\n          this.snackBar.open(message, 'Close', {\r\n            duration: 5000\r\n          });\r\n        }\r\n      });\r\n\r\n      this.subscriptions.add(sub);\r\n    } else {\r\n      console.log('Form validation failed:', this.paymentForm.errors); // Debug log\r\n      Object.keys(this.paymentForm.controls).forEach(key => {\r\n        const control = this.paymentForm.get(key);\r\n        if (control?.invalid) {\r\n          control.markAsTouched();\r\n          console.log(`Invalid field ${key}:`, control.errors); // Debug log\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/checkout']);\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}